ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 2


  31:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSHL.c ****     40u, 80u, 80u, 
  50:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSHL.c ****     20u, 40u, 40u, 
  54:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 5u, 5u, 
  58:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 
  62:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* LS__LS */
  70:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* B1__BTN */
  71:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* B2__BTN */
  72:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  73:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  74:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  76:Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* LS__LS */
  77:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* B1__BTN */
  78:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* B2__BTN */
  79:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  80:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  81:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint16 CYCODE CapSense_centroidMult[] = {
  83:Generated_Source\PSoC5/CapSense_CSHL.c ****     6400u, 
  84:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  85:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  86:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  87:Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 3


  88:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
  91:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  92:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  93:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
  94:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
  95:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
  96:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
  97:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
  98:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
  99:Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 100:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 101:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 102:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 103:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 104:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 105:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 106:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 107:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 108:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 109:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 110:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 111:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 112:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 113:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 114:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 115:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 116:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 117:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 118:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 119:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 120:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 121:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 122:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 123:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 124:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 125:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 126:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 127:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 128:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 129:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 130:Generated_Source\PSoC5/CapSense_CSHL.c **** {
  28              		.loc 1 130 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 131:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 132:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 133:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  34              		.loc 1 133 0
  35 0000 094B     		ldr	r3, .L3
  36 0002 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
  37              	.LVL1:
 134:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 4


 135:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 136:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 137:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 138:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 139:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 140:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 141:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 142:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 143:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 144:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 145:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 146:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 147:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  38              		.loc 1 147 0
  39 0004 094A     		ldr	r2, .L3+4
  40 0006 32F81010 		ldrh	r1, [r2, r0, lsl #1]
  41 000a 094A     		ldr	r2, .L3+8
  42 000c 22F81010 		strh	r1, [r2, r0, lsl #1]	@ movhi
 148:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  43              		.loc 1 148 0
  44 0010 0022     		movs	r2, #0
  45 0012 0849     		ldr	r1, .L3+12
  46 0014 0A54     		strb	r2, [r1, r0]
 149:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  47              		.loc 1 149 0
  48 0016 0849     		ldr	r1, .L3+16
  49 0018 0A54     		strb	r2, [r1, r0]
 150:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 151:Generated_Source\PSoC5/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
  50              		.loc 1 151 0
  51 001a 23B1     		cbz	r3, .L1
 152:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 153:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSense_deboun
  52              		.loc 1 153 0
  53 001c 5A1E     		subs	r2, r3, #1
  54 001e 0749     		ldr	r1, .L3+20
  55 0020 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
  56 0022 074B     		ldr	r3, .L3+24
  57              	.LVL2:
  58 0024 9954     		strb	r1, [r3, r2]
  59              	.LVL3:
  60              	.L1:
  61 0026 7047     		bx	lr
  62              	.L4:
  63              		.align	2
  64              	.L3:
  65 0028 00000000 		.word	CapSense_widgetNumber
  66 002c 00000000 		.word	CapSense_sensorRaw
  67 0030 00000000 		.word	CapSense_sensorBaseline
  68 0034 00000000 		.word	CapSense_sensorBaselineLow
  69 0038 00000000 		.word	CapSense_sensorSignal
  70 003c 00000000 		.word	.LANCHOR0
  71 0040 00000000 		.word	.LANCHOR1
  72              		.cfi_endproc
  73              	.LFE0:
  74              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  75              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 5


  76              		.align	2
  77              		.global	CapSense_InitializeSensorBaseline
  78              		.thumb
  79              		.thumb_func
  80              		.type	CapSense_InitializeSensorBaseline, %function
  81              	CapSense_InitializeSensorBaseline:
  82              	.LFB1:
 154:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 155:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 156:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 157:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 158:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 159:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 160:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 161:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 162:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 163:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 164:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 165:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 166:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 167:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 168:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 169:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 171:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 172:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 173:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 174:Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 175:Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 176:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 177:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 178:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 179:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 180:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 181:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 182:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 183:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 184:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 185:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 186:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 187:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 188:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 189:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 190:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 191:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 192:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 193:Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 194:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 195:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 196:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 197:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 198:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 199:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 200:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 201:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 202:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 203:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 6


 204:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 205:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 206:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 207:Generated_Source\PSoC5/CapSense_CSHL.c **** {
  83              		.loc 1 207 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL4:
  88 0000 10B5     		push	{r4, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
  92 0002 0446     		mov	r4, r0
 208:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 209:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  93              		.loc 1 209 0
  94 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  95              	.LVL5:
  96              	.L6:
 210:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  97              		.loc 1 210 0 discriminator 1
  98 0008 FFF7FEFF 		bl	CapSense_IsBusy
  99              	.LVL6:
 100 000c 0028     		cmp	r0, #0
 101 000e FBD1     		bne	.L6
 211:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 212:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 213:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 214:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 215:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 216:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 217:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 102              		.loc 1 217 0
 103 0010 2046     		mov	r0, r4
 104 0012 FFF7FEFF 		bl	CapSense_BaseInit
 105              	.LVL7:
 106 0016 10BD     		pop	{r4, pc}
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 110              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 111              		.align	2
 112              		.global	CapSense_InitializeAllBaselines
 113              		.thumb
 114              		.thumb_func
 115              		.type	CapSense_InitializeAllBaselines, %function
 116              	CapSense_InitializeAllBaselines:
 117              	.LFB2:
 218:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 219:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 220:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 221:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 222:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 223:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 224:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 225:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 7


 226:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 227:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 228:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 229:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 230:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 231:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 232:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 233:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 234:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 235:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 236:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 237:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 238:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 239:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 240:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 241:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 242:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 243:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 244:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 245:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 246:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 247:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 248:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 249:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 250:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 251:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 252:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 253:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 254:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 255:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 256:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 257:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 258:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 259:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 118              		.loc 1 259 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 10B5     		push	{r4, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 126              	.LVL8:
 260:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 261:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 262:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 263:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 127              		.loc 1 263 0
 128 0002 0024     		movs	r4, #0
 129 0004 04E0     		b	.L9
 130              	.LVL9:
 131              	.L10:
 264:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 265:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 132              		.loc 1 265 0 discriminator 3
 133 0006 2046     		mov	r0, r4
 134 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 8


 135              	.LVL10:
 263:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 136              		.loc 1 263 0 discriminator 3
 137 000c 0134     		adds	r4, r4, #1
 138              	.LVL11:
 139 000e E4B2     		uxtb	r4, r4
 140              	.LVL12:
 141              	.L9:
 263:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 142              		.loc 1 263 0 is_stmt 0 discriminator 1
 143 0010 062C     		cmp	r4, #6
 144 0012 F8D9     		bls	.L10
 266:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 267:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 145              		.loc 1 267 0 is_stmt 1
 146 0014 10BD     		pop	{r4, pc}
 147              		.cfi_endproc
 148              	.LFE2:
 149              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 150 0016 00BF     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 151              		.align	2
 152              		.global	CapSense_InitializeEnabledBaselines
 153              		.thumb
 154              		.thumb_func
 155              		.type	CapSense_InitializeEnabledBaselines, %function
 156              	CapSense_InitializeEnabledBaselines:
 157              	.LFB3:
 268:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 269:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 270:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 271:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 272:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 273:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 274:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 275:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 276:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 277:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 278:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 279:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 280:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 281:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 282:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 283:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 284:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 285:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 286:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 287:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 288:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 289:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 291:Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 292:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 158              		.loc 1 292 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 9


 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 293:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 294:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 295:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 296:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 297:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 166              		.loc 1 297 0
 167 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 168              	.LVL13:
 169              	.L13:
 298:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 170              		.loc 1 298 0 discriminator 1
 171 0006 FFF7FEFF 		bl	CapSense_IsBusy
 172              	.LVL14:
 173 000a 0028     		cmp	r0, #0
 174 000c FBD1     		bne	.L13
 175 000e 0024     		movs	r4, #0
 176 0010 11E0     		b	.L14
 177              	.LVL15:
 178              	.L16:
 299:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 300:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 301:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 302:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 303:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 304:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 305:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 179              		.loc 1 305 0
 180 0012 E208     		lsrs	r2, r4, #3
 306:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 181              		.loc 1 306 0
 182 0014 04F00701 		and	r1, r4, #7
 183 0018 0123     		movs	r3, #1
 184 001a 8B40     		lsls	r3, r3, r1
 185              	.LVL16:
 307:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 308:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 186              		.loc 1 309 0
 187 001c 0749     		ldr	r1, .L18
 188 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 189 0020 1342     		tst	r3, r2
 190 0022 03D1     		bne	.L15
 310:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 311:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 191              		.loc 1 311 0
 192 0024 0022     		movs	r2, #0
 193 0026 064B     		ldr	r3, .L18+4
 194              	.LVL17:
 195 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 196              	.L15:
 312:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 313:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 314:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 315:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 10


 197              		.loc 1 315 0 discriminator 2
 198 002c 2046     		mov	r0, r4
 199 002e FFF7FEFF 		bl	CapSense_BaseInit
 200              	.LVL18:
 303:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 201              		.loc 1 303 0 discriminator 2
 202 0032 0134     		adds	r4, r4, #1
 203              	.LVL19:
 204 0034 E4B2     		uxtb	r4, r4
 205              	.LVL20:
 206              	.L14:
 303:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 207              		.loc 1 303 0 is_stmt 0 discriminator 1
 208 0036 062C     		cmp	r4, #6
 209 0038 EBD9     		bls	.L16
 316:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 317:Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 210              		.loc 1 317 0 is_stmt 1
 211 003a 10BD     		pop	{r4, pc}
 212              	.LVL21:
 213              	.L19:
 214              		.align	2
 215              	.L18:
 216 003c 00000000 		.word	CapSense_sensorEnableMask
 217 0040 00000000 		.word	CapSense_sensorRaw
 218              		.cfi_endproc
 219              	.LFE3:
 220              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 221              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 222              		.align	2
 223              		.global	CapSense_UpdateSensorBaseline
 224              		.thumb
 225              		.thumb_func
 226              		.type	CapSense_UpdateSensorBaseline, %function
 227              	CapSense_UpdateSensorBaseline:
 228              	.LFB4:
 318:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 319:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 320:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 321:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 322:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 323:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 324:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 325:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 326:Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 327:Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 328:Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 329:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 330:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 331:Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 332:Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 333:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 334:Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 335:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 336:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 337:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 338:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 11


 339:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 340:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 341:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 342:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 343:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 344:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 345:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 346:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 347:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 348:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 349:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 350:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 351:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 352:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 353:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 354:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 355:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 356:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 358:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 359:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 229              		.loc 1 359 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              	.LVL22:
 234 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 235              		.cfi_def_cfa_offset 24
 236              		.cfi_offset 4, -24
 237              		.cfi_offset 5, -20
 238              		.cfi_offset 6, -16
 239              		.cfi_offset 7, -12
 240              		.cfi_offset 8, -8
 241              		.cfi_offset 14, -4
 242 0004 0446     		mov	r4, r0
 360:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 361:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 362:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 363:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 243              		.loc 1 363 0
 244 0006 294B     		ldr	r3, .L31
 245 0008 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 246              	.LVL23:
 364:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 247              		.loc 1 364 0
 248 000a 294A     		ldr	r2, .L31+4
 249 000c 1344     		add	r3, r3, r2
 250              	.LVL24:
 251 000e 1E79     		ldrb	r6, [r3, #4]	@ zero_extendqisi2
 252              	.LVL25:
 365:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 366:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 367:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 368:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 369:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 370:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 371:Generated_Source\PSoC5/CapSense_CSHL.c ****     
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 12


 372:Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 253              		.loc 1 372 0
 254 0010 284B     		ldr	r3, .L31+8
 255              	.LVL26:
 256 0012 33F81080 		ldrh	r8, [r3, r0, lsl #1]
 257              	.LVL27:
 373:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 374:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 375:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 376:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 377:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 378:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 380:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 381:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 382:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 383:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 384:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 385:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 387:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 388:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 389:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 390:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 391:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 392:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 393:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 394:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 396:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 397:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 400:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 401:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 403:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 404:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 405:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 406:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 407:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 408:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 409:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 410:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 411:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 412:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 413:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 258              		.loc 1 413 0
 259 0016 FFF7FEFF 		bl	CapSense_CalculateThresholds
 260              	.LVL28:
 414:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 415:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 416:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 417:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 418:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 419:Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 261              		.loc 1 419 0
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 13


 262 001a 274B     		ldr	r3, .L31+12
 263 001c 33F81420 		ldrh	r2, [r3, r4, lsl #1]
 264 0020 9045     		cmp	r8, r2
 265 0022 04D3     		bcc	.L21
 420:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 421:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 266              		.loc 1 421 0
 267 0024 C2EB0805 		rsb	r5, r2, r8
 268 0028 ADB2     		uxth	r5, r5
 269              	.LVL29:
 422:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 270              		.loc 1 422 0
 271 002a 0127     		movs	r7, #1
 272 002c 03E0     		b	.L22
 273              	.LVL30:
 274              	.L21:
 423:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 424:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 425:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 426:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 275              		.loc 1 426 0
 276 002e C8EB0205 		rsb	r5, r8, r2
 277 0032 ADB2     		uxth	r5, r5
 278              	.LVL31:
 427:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 279              		.loc 1 427 0
 280 0034 0027     		movs	r7, #0
 281              	.LVL32:
 282              	.L22:
 428:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 429:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 430:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 283              		.loc 1 430 0
 284 0036 87B9     		cbnz	r7, .L23
 285              		.loc 1 430 0 is_stmt 0 discriminator 1
 286 0038 142D     		cmp	r5, #20
 287 003a 0ED9     		bls	.L23
 431:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 432:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 288              		.loc 1 432 0 is_stmt 1
 289 003c 1F4B     		ldr	r3, .L31+16
 290 003e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 291 0040 042B     		cmp	r3, #4
 292 0042 06D9     		bls	.L24
 433:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 434:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 293              		.loc 1 434 0
 294 0044 2046     		mov	r0, r4
 295 0046 FFF7FEFF 		bl	CapSense_BaseInit
 296              	.LVL33:
 435:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 297              		.loc 1 435 0
 298 004a 0022     		movs	r2, #0
 299 004c 1B4B     		ldr	r3, .L31+16
 300 004e 1A55     		strb	r2, [r3, r4]
 301 0050 18E0     		b	.L25
 302              	.L24:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 14


 436:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 437:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 438:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 439:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 303              		.loc 1 439 0
 304 0052 0133     		adds	r3, r3, #1
 305 0054 194A     		ldr	r2, .L31+16
 306 0056 1355     		strb	r3, [r2, r4]
 307 0058 14E0     		b	.L25
 308              	.L23:
 440:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 441:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 442:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 443:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 444:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 445:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 446:Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 309              		.loc 1 446 0
 310 005a B3B2     		uxth	r3, r6
 311 005c 9D42     		cmp	r5, r3
 312 005e 02D9     		bls	.L26
 313              		.loc 1 446 0 is_stmt 0 discriminator 1
 314 0060 132D     		cmp	r5, #19
 315 0062 0FD8     		bhi	.L25
 447:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 448:Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 316              		.loc 1 448 0 is_stmt 1
 317 0064 77B9     		cbnz	r7, .L25
 318              	.L26:
 319              	.LVL34:
 449:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 450:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 451:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 452:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 453:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 320              		.loc 1 453 0
 321 0066 1649     		ldr	r1, .L31+20
 322 0068 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 323 006a 43EA0223 		orr	r3, r3, r2, lsl #8
 324              	.LVL35:
 454:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 455:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 456:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 325              		.loc 1 456 0
 326 006e 4344     		add	r3, r3, r8
 327              	.LVL36:
 457:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 458:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 459:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 328              		.loc 1 459 0
 329 0070 9B1A     		subs	r3, r3, r2
 330              	.LVL37:
 460:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 461:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 462:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 331              		.loc 1 462 0
 332 0072 C3F30F20 		ubfx	r0, r3, #8, #16
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 15


 333 0076 104A     		ldr	r2, .L31+12
 334 0078 22F81400 		strh	r0, [r2, r4, lsl #1]	@ movhi
 463:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 335              		.loc 1 463 0
 336 007c 0B55     		strb	r3, [r1, r4]
 464:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 465:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 337              		.loc 1 465 0
 338 007e 0022     		movs	r2, #0
 339 0080 0E4B     		ldr	r3, .L31+16
 340              	.LVL38:
 341 0082 1A55     		strb	r2, [r3, r4]
 342              	.L25:
 466:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 467:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 468:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 469:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 470:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 471:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 472:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 343              		.loc 1 472 0
 344 0084 B6B2     		uxth	r6, r6
 345              	.LVL39:
 346 0086 B542     		cmp	r5, r6
 347 0088 0BD9     		bls	.L27
 348              		.loc 1 472 0 is_stmt 0 discriminator 1
 349 008a 57B1     		cbz	r7, .L27
 473:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 474:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 475:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 476:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 350              		.loc 1 476 0 is_stmt 1
 351 008c FF2D     		cmp	r5, #255
 352 008e 04D9     		bls	.L28
 477:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 478:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 353              		.loc 1 478 0
 354 0090 FF22     		movs	r2, #255
 355 0092 0C4B     		ldr	r3, .L31+24
 356 0094 1A55     		strb	r2, [r3, r4]
 357 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 358              	.LVL40:
 359              	.L28:
 479:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 480:Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 481:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 482:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 360              		.loc 1 482 0
 361 009a 0A4B     		ldr	r3, .L31+24
 362 009c 1D55     		strb	r5, [r3, r4]
 363 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 364              	.LVL41:
 365              	.L27:
 483:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 484:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 485:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 486:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 16


 487:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 488:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 489:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 490:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 491:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 366              		.loc 1 491 0
 367 00a2 0022     		movs	r2, #0
 368 00a4 074B     		ldr	r3, .L31+24
 369 00a6 1A55     		strb	r2, [r3, r4]
 370 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 371              	.LVL42:
 372              	.L32:
 373              		.align	2
 374              	.L31:
 375 00ac 00000000 		.word	CapSense_widgetNumber
 376 00b0 00000000 		.word	.LANCHOR0
 377 00b4 00000000 		.word	CapSense_sensorRaw
 378 00b8 00000000 		.word	CapSense_sensorBaseline
 379 00bc 00000000 		.word	CapSense_lowBaselineResetCnt
 380 00c0 00000000 		.word	CapSense_sensorBaselineLow
 381 00c4 00000000 		.word	CapSense_sensorSignal
 382              		.cfi_endproc
 383              	.LFE4:
 384              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 385              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 386              		.align	2
 387              		.global	CapSense_UpdateEnabledBaselines
 388              		.thumb
 389              		.thumb_func
 390              		.type	CapSense_UpdateEnabledBaselines, %function
 391              	CapSense_UpdateEnabledBaselines:
 392              	.LFB5:
 492:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 493:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 494:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 495:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 496:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 497:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 498:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 499:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 500:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 501:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 502:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 503:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 504:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 506:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 507:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 508:Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 509:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 510:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 511:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 512:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 513:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 514:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 515:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 516:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 17


 517:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 518:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 519:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 520:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 521:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 522:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 523:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 524:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 525:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 526:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 527:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 528:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 529:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 530:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 531:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 532:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 393              		.loc 1 532 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401              	.LVL43:
 533:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 534:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 535:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 536:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 537:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 402              		.loc 1 537 0
 403 0002 0024     		movs	r4, #0
 404 0004 0DE0     		b	.L34
 405              	.LVL44:
 406              	.L36:
 538:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 539:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 407              		.loc 1 539 0
 408 0006 E208     		lsrs	r2, r4, #3
 540:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 409              		.loc 1 540 0
 410 0008 04F00701 		and	r1, r4, #7
 411 000c 0123     		movs	r3, #1
 412 000e 8B40     		lsls	r3, r3, r1
 413              	.LVL45:
 541:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 414              		.loc 1 541 0
 415 0010 0549     		ldr	r1, .L38
 416 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 417 0014 1342     		tst	r3, r2
 418 0016 02D0     		beq	.L35
 542:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 543:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 419              		.loc 1 543 0
 420 0018 2046     		mov	r0, r4
 421 001a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 422              	.LVL46:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 18


 423              	.L35:
 537:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 424              		.loc 1 537 0 discriminator 2
 425 001e 0134     		adds	r4, r4, #1
 426              	.LVL47:
 427 0020 E4B2     		uxtb	r4, r4
 428              	.LVL48:
 429              	.L34:
 537:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 430              		.loc 1 537 0 is_stmt 0 discriminator 1
 431 0022 062C     		cmp	r4, #6
 432 0024 EFD9     		bls	.L36
 544:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 545:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 546:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 433              		.loc 1 546 0 is_stmt 1
 434 0026 10BD     		pop	{r4, pc}
 435              	.LVL49:
 436              	.L39:
 437              		.align	2
 438              	.L38:
 439 0028 00000000 		.word	CapSense_sensorEnableMask
 440              		.cfi_endproc
 441              	.LFE5:
 442              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 443              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 444              		.align	2
 445              		.global	CapSense_CheckIsSensorActive
 446              		.thumb
 447              		.thumb_func
 448              		.type	CapSense_CheckIsSensorActive, %function
 449              	CapSense_CheckIsSensorActive:
 450              	.LFB6:
 547:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 548:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 549:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 550:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 551:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 552:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 553:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 554:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 555:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 556:Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 557:Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 558:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 559:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 560:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 561:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 562:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 563:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 564:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 565:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 566:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 567:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 568:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 569:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 570:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 19


 571:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 572:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 573:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 574:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 575:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 576:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 577:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 578:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 579:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 580:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 581:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 582:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 583:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 584:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 585:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 586:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 587:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 588:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 589:Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 590:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 451              		.loc 1 590 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL50:
 456 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 591:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 592:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 593:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 463              		.loc 1 593 0
 464 0002 C408     		lsrs	r4, r0, #3
 465              	.LVL51:
 594:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 466              		.loc 1 594 0
 467 0004 00F00702 		and	r2, r0, #7
 468 0008 0123     		movs	r3, #1
 469 000a 9340     		lsls	r3, r3, r2
 470 000c DBB2     		uxtb	r3, r3
 471              	.LVL52:
 595:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 596:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 472              		.loc 1 596 0
 473 000e 1E4A     		ldr	r2, .L49
 474 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 475              	.LVL53:
 597:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 476              		.loc 1 597 0
 477 0012 1E4D     		ldr	r5, .L49+4
 478 0014 AE18     		adds	r6, r5, r2
 479 0016 377A     		ldrb	r7, [r6, #8]	@ zero_extendqisi2
 480              	.LVL54:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 20


 598:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 481              		.loc 1 598 0
 482 0018 317B     		ldrb	r1, [r6, #12]	@ zero_extendqisi2
 483              	.LVL55:
 599:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 484              		.loc 1 599 0
 485 001a AE5C     		ldrb	r6, [r5, r2]	@ zero_extendqisi2
 486              	.LVL56:
 600:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 601:Generated_Source\PSoC5/CapSense_CSHL.c ****     if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 487              		.loc 1 601 0
 488 001c 22B9     		cbnz	r2, .L41
 489              	.LVL57:
 602:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 603:Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 604:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 490              		.loc 1 604 0
 491 001e 0125     		movs	r5, #1
 492 0020 1B4A     		ldr	r2, .L49+8
 493              	.LVL58:
 494 0022 9570     		strb	r5, [r2, #2]
 603:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 495              		.loc 1 603 0
 496 0024 0222     		movs	r2, #2
 497 0026 01E0     		b	.L42
 498              	.LVL59:
 499              	.L41:
 605:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 606:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 607:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 608:Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1);
 500              		.loc 1 608 0
 501 0028 013A     		subs	r2, r2, #1
 502              	.LVL60:
 503 002a D2B2     		uxtb	r2, r2
 504              	.LVL61:
 505              	.L42:
 609:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 610:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 611:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 612:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 613:Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 506              		.loc 1 613 0
 507 002c 194D     		ldr	r5, .L49+12
 508 002e 2D5D     		ldrb	r5, [r5, r4]	@ zero_extendqisi2
 509 0030 2B42     		tst	r3, r5
 510 0032 0DD0     		beq	.L43
 614:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 615:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 616:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 511              		.loc 1 616 0
 512 0034 DFF860E0 		ldr	lr, .L49+16
 513 0038 1EF80000 		ldrb	r0, [lr, r0]	@ zero_extendqisi2
 514              	.LVL62:
 515 003c 791A     		subs	r1, r7, r1
 516              	.LVL63:
 517 003e 8842     		cmp	r0, r1
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 21


 518 0040 1BDA     		bge	.L44
 617:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 618:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 519              		.loc 1 618 0
 520 0042 25EA0305 		bic	r5, r5, r3
 521 0046 1349     		ldr	r1, .L49+12
 522 0048 0D55     		strb	r5, [r1, r4]
 619:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 523              		.loc 1 619 0
 524 004a 1149     		ldr	r1, .L49+8
 525 004c 8E54     		strb	r6, [r1, r2]
 526 004e 14E0     		b	.L44
 527              	.LVL64:
 528              	.L43:
 620:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 621:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 622:Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 623:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 624:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 625:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 529              		.loc 1 625 0
 530 0050 DFF844E0 		ldr	lr, .L49+16
 531 0054 1EF80000 		ldrb	r0, [lr, r0]	@ zero_extendqisi2
 532              	.LVL65:
 533 0058 3944     		add	r1, r1, r7
 534              	.LVL66:
 535 005a 8842     		cmp	r0, r1
 536 005c 0BDD     		ble	.L45
 626:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 627:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 628:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 537              		.loc 1 628 0
 538 005e 1146     		mov	r1, r2
 539 0060 0B48     		ldr	r0, .L49+8
 540 0062 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 541              	.LVL67:
 542 0064 012A     		cmp	r2, #1
 543 0066 02D8     		bhi	.L46
 629:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 630:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 544              		.loc 1 630 0
 545 0068 1D43     		orrs	r5, r5, r3
 546 006a 0A48     		ldr	r0, .L49+12
 547 006c 0555     		strb	r5, [r0, r4]
 548              	.L46:
 631:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 632:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 549              		.loc 1 632 0
 550 006e 013A     		subs	r2, r2, #1
 551 0070 0748     		ldr	r0, .L49+8
 552 0072 4254     		strb	r2, [r0, r1]
 553 0074 01E0     		b	.L44
 554              	.LVL68:
 555              	.L45:
 633:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 634:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 635:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 22


 636:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 637:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 556              		.loc 1 637 0
 557 0076 0649     		ldr	r1, .L49+8
 558 0078 8E54     		strb	r6, [r1, r2]
 559              	.LVL69:
 560              	.L44:
 638:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 639:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 640:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 641:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 561              		.loc 1 641 0
 562 007a 064A     		ldr	r2, .L49+12
 563 007c 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 564 007e 1840     		ands	r0, r3, r0
 565 0080 00D0     		beq	.L47
 566 0082 0120     		movs	r0, #1
 567              	.L47:
 642:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 568              		.loc 1 642 0 discriminator 4
 569 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 570              	.LVL70:
 571              	.L50:
 572 0086 00BF     		.align	2
 573              	.L49:
 574 0088 00000000 		.word	CapSense_widgetNumber
 575 008c 00000000 		.word	.LANCHOR0
 576 0090 00000000 		.word	.LANCHOR1
 577 0094 00000000 		.word	CapSense_sensorOnMask
 578 0098 00000000 		.word	CapSense_sensorSignal
 579              		.cfi_endproc
 580              	.LFE6:
 581              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 582              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 583              		.align	2
 584              		.global	CapSense_CheckIsWidgetActive
 585              		.thumb
 586              		.thumb_func
 587              		.type	CapSense_CheckIsWidgetActive, %function
 588              	CapSense_CheckIsWidgetActive:
 589              	.LFB7:
 643:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 644:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 645:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 646:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 647:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 648:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 649:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 650:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 651:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 652:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 653:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 654:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 655:Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 656:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 657:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 658:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 23


 659:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 660:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 661:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 662:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 663:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 664:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 665:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 666:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 667:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 668:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 669:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 670:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 590              		.loc 1 670 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              	.LVL71:
 595 0000 70B5     		push	{r4, r5, r6, lr}
 596              		.cfi_def_cfa_offset 16
 597              		.cfi_offset 4, -16
 598              		.cfi_offset 5, -12
 599              		.cfi_offset 6, -8
 600              		.cfi_offset 14, -4
 671:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 601              		.loc 1 671 0
 602 0002 094B     		ldr	r3, .L56
 603 0004 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 604              	.LVL72:
 672:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 605              		.loc 1 672 0
 606 0006 1844     		add	r0, r0, r3
 607              	.LVL73:
 608 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 609 000a 2544     		add	r5, r5, r4
 610 000c EDB2     		uxtb	r5, r5
 611              	.LVL74:
 673:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 612              		.loc 1 673 0
 613 000e 0026     		movs	r6, #0
 614              	.LVL75:
 615              	.L53:
 674:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 675:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 676:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 677:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 678:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 616              		.loc 1 678 0
 617 0010 2046     		mov	r0, r4
 618 0012 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 619              	.LVL76:
 620 0016 00B1     		cbz	r0, .L52
 679:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 680:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 621              		.loc 1 680 0
 622 0018 0126     		movs	r6, #1
 623              	.LVL77:
 624              	.L52:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 24


 681:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 682:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 625              		.loc 1 682 0
 626 001a 0134     		adds	r4, r4, #1
 627              	.LVL78:
 628 001c E4B2     		uxtb	r4, r4
 629              	.LVL79:
 683:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 684:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 630              		.loc 1 684 0
 631 001e A542     		cmp	r5, r4
 632 0020 F6D8     		bhi	.L53
 685:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 686:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 687:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 688:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 689:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 633              		.loc 1 689 0
 634 0022 3046     		mov	r0, r6
 635 0024 70BD     		pop	{r4, r5, r6, pc}
 636              	.LVL80:
 637              	.L57:
 638 0026 00BF     		.align	2
 639              	.L56:
 640 0028 00000000 		.word	.LANCHOR2
 641              		.cfi_endproc
 642              	.LFE7:
 643              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 644              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 645              		.align	2
 646              		.global	CapSense_CheckIsAnyWidgetActive
 647              		.thumb
 648              		.thumb_func
 649              		.type	CapSense_CheckIsAnyWidgetActive, %function
 650              	CapSense_CheckIsAnyWidgetActive:
 651              	.LFB8:
 690:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 691:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 692:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 693:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 694:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 695:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 696:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 697:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 698:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 699:Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 700:Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 701:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 702:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 703:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 704:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 705:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 706:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 707:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 708:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 709:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 710:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 25


 711:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 712:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 713:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 714:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 652              		.loc 1 714 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656 0000 38B5     		push	{r3, r4, r5, lr}
 657              		.cfi_def_cfa_offset 16
 658              		.cfi_offset 3, -16
 659              		.cfi_offset 4, -12
 660              		.cfi_offset 5, -8
 661              		.cfi_offset 14, -4
 662              	.LVL81:
 715:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 716:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 663              		.loc 1 716 0
 664 0002 0025     		movs	r5, #0
 717:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 718:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 665              		.loc 1 718 0
 666 0004 2C46     		mov	r4, r5
 667 0006 06E0     		b	.L59
 668              	.LVL82:
 669              	.L61:
 719:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 720:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 670              		.loc 1 720 0
 671 0008 2046     		mov	r0, r4
 672 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 673              	.LVL83:
 674 000e 00B1     		cbz	r0, .L60
 721:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 722:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 675              		.loc 1 722 0
 676 0010 0125     		movs	r5, #1
 677              	.LVL84:
 678              	.L60:
 718:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 679              		.loc 1 718 0 discriminator 2
 680 0012 0134     		adds	r4, r4, #1
 681              	.LVL85:
 682 0014 E4B2     		uxtb	r4, r4
 683              	.LVL86:
 684              	.L59:
 718:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 685              		.loc 1 718 0 is_stmt 0 discriminator 1
 686 0016 022C     		cmp	r4, #2
 687 0018 F6D9     		bls	.L61
 723:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 724:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 725:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 726:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 727:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 728:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 688              		.loc 1 728 0 is_stmt 1
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 26


 689 001a 2846     		mov	r0, r5
 690 001c 38BD     		pop	{r3, r4, r5, pc}
 691              		.cfi_endproc
 692              	.LFE8:
 693              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 694 001e 00BF     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 695              		.align	2
 696              		.global	CapSense_EnableWidget
 697              		.thumb
 698              		.thumb_func
 699              		.type	CapSense_EnableWidget, %function
 700              	CapSense_EnableWidget:
 701              	.LFB9:
 729:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 730:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 731:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 732:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 733:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 734:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 735:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 736:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 737:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 738:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 739:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 740:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 741:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 742:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 743:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 744:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 745:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 746:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 747:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 748:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 749:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 750:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 751:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 752:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 753:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 754:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 755:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 756:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 757:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 758:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 759:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 760:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 702              		.loc 1 760 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL87:
 708 0000 30B4     		push	{r4, r5}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 5, -4
 761:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 762:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 27


 763:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 712              		.loc 1 763 0
 713 0002 0B4A     		ldr	r2, .L67
 714 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 715              	.LVL88:
 764:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 716              		.loc 1 764 0
 717 0006 1044     		add	r0, r0, r2
 718              	.LVL89:
 719 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 720 000a 1D44     		add	r5, r5, r3
 721 000c EDB2     		uxtb	r5, r5
 722              	.LVL90:
 723              	.L65:
 765:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 766:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 767:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 768:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 769:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 724              		.loc 1 769 0 discriminator 1
 725 000e D808     		lsrs	r0, r3, #3
 726              	.LVL91:
 770:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 727              		.loc 1 770 0 discriminator 1
 728 0010 03F00701 		and	r1, r3, #7
 729 0014 0122     		movs	r2, #1
 730 0016 8A40     		lsls	r2, r2, r1
 731 0018 D2B2     		uxtb	r2, r2
 732              	.LVL92:
 771:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 772:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 733              		.loc 1 772 0 discriminator 1
 734 001a 064C     		ldr	r4, .L67+4
 735 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 736 001e 0A43     		orrs	r2, r2, r1
 737              	.LVL93:
 738 0020 2254     		strb	r2, [r4, r0]
 773:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 739              		.loc 1 773 0 discriminator 1
 740 0022 0133     		adds	r3, r3, #1
 741              	.LVL94:
 742 0024 DBB2     		uxtb	r3, r3
 743              	.LVL95:
 774:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 775:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 744              		.loc 1 775 0 discriminator 1
 745 0026 9D42     		cmp	r5, r3
 746 0028 F1D8     		bhi	.L65
 776:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 777:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 778:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 747              		.loc 1 778 0
 748 002a 30BC     		pop	{r4, r5}
 749              		.cfi_restore 5
 750              		.cfi_restore 4
 751              		.cfi_def_cfa_offset 0
 752              	.LVL96:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 28


 753 002c 7047     		bx	lr
 754              	.L68:
 755 002e 00BF     		.align	2
 756              	.L67:
 757 0030 00000000 		.word	.LANCHOR2
 758 0034 00000000 		.word	CapSense_sensorEnableMask
 759              		.cfi_endproc
 760              	.LFE9:
 761              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 762              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 763              		.align	2
 764              		.global	CapSense_DisableWidget
 765              		.thumb
 766              		.thumb_func
 767              		.type	CapSense_DisableWidget, %function
 768              	CapSense_DisableWidget:
 769              	.LFB10:
 779:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 780:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 781:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 782:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 783:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 784:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 785:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 786:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 787:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 788:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 789:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 790:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 792:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 793:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 795:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 796:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 797:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 798:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 799:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 800:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 801:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 802:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 803:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 804:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 805:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 806:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 807:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 808:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 809:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 810:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 770              		.loc 1 810 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LVL97:
 776 0000 30B4     		push	{r4, r5}
 777              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 29


 778              		.cfi_offset 4, -8
 779              		.cfi_offset 5, -4
 811:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 812:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 813:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 780              		.loc 1 813 0
 781 0002 0B4A     		ldr	r2, .L72
 782 0004 135C     		ldrb	r3, [r2, r0]	@ zero_extendqisi2
 783              	.LVL98:
 814:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 784              		.loc 1 814 0
 785 0006 1044     		add	r0, r0, r2
 786              	.LVL99:
 787 0008 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 788 000a 1D44     		add	r5, r5, r3
 789 000c EDB2     		uxtb	r5, r5
 790              	.LVL100:
 791              	.L70:
 815:Generated_Source\PSoC5/CapSense_CSHL.c ****    
 816:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 817:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 818:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 819:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 792              		.loc 1 819 0 discriminator 1
 793 000e D808     		lsrs	r0, r3, #3
 794              	.LVL101:
 820:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 795              		.loc 1 820 0 discriminator 1
 796 0010 03F00701 		and	r1, r3, #7
 797 0014 0122     		movs	r2, #1
 798 0016 8A40     		lsls	r2, r2, r1
 799 0018 D2B2     		uxtb	r2, r2
 800              	.LVL102:
 821:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 822:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 801              		.loc 1 822 0 discriminator 1
 802 001a 064C     		ldr	r4, .L72+4
 803 001c 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 804 001e 21EA0202 		bic	r2, r1, r2
 805              	.LVL103:
 806 0022 2254     		strb	r2, [r4, r0]
 823:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 807              		.loc 1 823 0 discriminator 1
 808 0024 0133     		adds	r3, r3, #1
 809              	.LVL104:
 810 0026 DBB2     		uxtb	r3, r3
 811              	.LVL105:
 824:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 825:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 812              		.loc 1 825 0 discriminator 1
 813 0028 9D42     		cmp	r5, r3
 814 002a F0D8     		bhi	.L70
 826:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 827:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 828:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 815              		.loc 1 828 0
 816 002c 30BC     		pop	{r4, r5}
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 30


 817              		.cfi_restore 5
 818              		.cfi_restore 4
 819              		.cfi_def_cfa_offset 0
 820              	.LVL106:
 821 002e 7047     		bx	lr
 822              	.L73:
 823              		.align	2
 824              	.L72:
 825 0030 00000000 		.word	.LANCHOR2
 826 0034 00000000 		.word	CapSense_sensorEnableMask
 827              		.cfi_endproc
 828              	.LFE10:
 829              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 830              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 831              		.align	2
 832              		.global	CapSense_FindMaximum
 833              		.thumb
 834              		.thumb_func
 835              		.type	CapSense_FindMaximum, %function
 836              	CapSense_FindMaximum:
 837              	.LFB11:
 829:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 830:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 831:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 832:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 833:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 834:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 835:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 836:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 837:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 838:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 839:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 840:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 841:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 842:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 843:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 844:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_sensorSignal[] array.
 845:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 846:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 847:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 848:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 849:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 850:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 851:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 852:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 853:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 854:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 855:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 856:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 857:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 858:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 859:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 860:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 861:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 838              		.loc 1 861 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 31


 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 843              	.LVL107:
 844 0000 70B4     		push	{r4, r5, r6}
 845              		.cfi_def_cfa_offset 12
 846              		.cfi_offset 4, -12
 847              		.cfi_offset 5, -8
 848              		.cfi_offset 6, -4
 849              	.LVL108:
 862:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 863:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 864:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 865:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 866:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 867:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 868:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 869:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 870:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 871:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 872:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 873:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 874:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset]; 
 850              		.loc 1 874 0
 851 0002 094D     		ldr	r5, .L80
 852 0004 0544     		add	r5, r5, r0
 853              	.LVL109:
 873:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset]; 
 854              		.loc 1 873 0
 855 0006 0026     		movs	r6, #0
 872:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 856              		.loc 1 872 0
 857 0008 FF20     		movs	r0, #255
 858              	.LVL110:
 875:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 876:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 877:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 878:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 879:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 880:Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 881:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 882:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 883:Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 884:Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 885:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 886:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 887:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 888:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 889:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 890:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 891:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 892:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 893:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 894:Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 895:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 896:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 897:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 898:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 32


 899:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 900:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 901:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
 902:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 903:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 904:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 905:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 906:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 907:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 908:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 909:Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 910:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 911:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 912:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 913:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 914:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 915:Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 916:Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 917:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 918:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 919:Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 920:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 921:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 922:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 923:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 924:Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 925:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 926:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 927:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 928:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 929:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 930:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 931:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 932:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 933:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 934:Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 935:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 936:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 937:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 938:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 939:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 940:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 941:Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 942:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 943:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
 944:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 945:Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 946:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 947:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
 948:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 949:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 950:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 951:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 952:Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 953:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 954:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 955:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 33


 956:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 957:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 958:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
 959:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
 960:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 961:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 962:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 963:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 964:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
 965:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
 966:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 967:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 968:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 969:Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
 970:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 971:Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 859              		.loc 1 971 0
 860 000a 3346     		mov	r3, r6
 861 000c 08E0     		b	.L75
 862              	.LVL111:
 863              	.L77:
 972:Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 973:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
 974:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 864              		.loc 1 974 0
 865 000e EC5C     		ldrb	r4, [r5, r3]	@ zero_extendqisi2
 866 0010 9442     		cmp	r4, r2
 867 0012 03D9     		bls	.L76
 975:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 976:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 868              		.loc 1 976 0
 869 0014 A642     		cmp	r6, r4
 870 0016 01D2     		bcs	.L76
 977:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 978:Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 979:Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 871              		.loc 1 979 0
 872 0018 2646     		mov	r6, r4
 873              	.LVL112:
 978:Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 874              		.loc 1 978 0
 875 001a 1846     		mov	r0, r3
 876              	.LVL113:
 877              	.L76:
 971:Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 878              		.loc 1 971 0 discriminator 2
 879 001c 0133     		adds	r3, r3, #1
 880              	.LVL114:
 881 001e DBB2     		uxtb	r3, r3
 882              	.LVL115:
 883              	.L75:
 971:Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 884              		.loc 1 971 0 is_stmt 0 discriminator 1
 885 0020 8B42     		cmp	r3, r1
 886 0022 F4D3     		bcc	.L77
 980:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 981:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 34


 982:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 983:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 984:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 985:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 887              		.loc 1 985 0 is_stmt 1
 888 0024 70BC     		pop	{r4, r5, r6}
 889              		.cfi_restore 6
 890              		.cfi_restore 5
 891              		.cfi_restore 4
 892              		.cfi_def_cfa_offset 0
 893              	.LVL116:
 894 0026 7047     		bx	lr
 895              	.L81:
 896              		.align	2
 897              	.L80:
 898 0028 00000000 		.word	CapSense_sensorSignal
 899              		.cfi_endproc
 900              	.LFE11:
 901              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 902              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 903              		.align	2
 904              		.global	CapSense_CalcCentroid
 905              		.thumb
 906              		.thumb_func
 907              		.type	CapSense_CalcCentroid, %function
 908              	CapSense_CalcCentroid:
 909              	.LFB12:
 986:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 987:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 988:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 989:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
 990:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 991:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 992:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 993:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 994:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
 995:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 996:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 997:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
 998:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
 999:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1000:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
1001:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1002:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1003:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
1004:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1005:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1006:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1007:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1008:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1009:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1010:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1011:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1012:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1013:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1014:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1015:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 35


1016:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1017:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 910              		.loc 1 1017 0
 911              		.cfi_startproc
 912              		@ args = 4, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              	.LVL117:
 915 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 916              		.cfi_def_cfa_offset 20
 917              		.cfi_offset 4, -20
 918              		.cfi_offset 5, -16
 919              		.cfi_offset 6, -12
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 9DF81450 		ldrb	r5, [sp, #20]	@ zero_extendqisi2
 923              	.LVL118:
1018:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1019:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
1020:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
1021:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1022:Generated_Source\PSoC5/CapSense_CSHL.c ****                
1023:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1024:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1025:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1026:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1027:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Helps while centroid calulation */
1028:Generated_Source\PSoC5/CapSense_CSHL.c ****         static uint8 CapSense_centroid[3u];
1029:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1030:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1031:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 numerator;
1032:Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1033:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 924              		.loc 1 1033 0
 925 0006 284C     		ldr	r4, .L93
 926 0008 2144     		add	r1, r1, r4
 927              	.LVL119:
1034:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1035:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1036:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1037:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1038:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1039:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1040:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1041:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1042:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1043:Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1044:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1045:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1046:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1047:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1048:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1049:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1050:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1051:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1052:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1053:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1054:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 36


1055:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1056:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1057:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1058:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1059:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1060:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1061:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1062:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1063:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1064:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1065:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1066:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1067:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1068:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1069:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1070:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1071:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1072:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1073:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1074:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1075:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1076:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1077:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1078:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1079:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1080:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1081:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1082:Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1083:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1084:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1085:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1086:Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1087:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1088:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1089:Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1090:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1091:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1092:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (maximum >= 1u)
 928              		.loc 1 1092 0
 929 000a 0446     		mov	r4, r0
 930 000c 10B1     		cbz	r0, .L91
1093:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1094:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 931              		.loc 1 1094 0
 932 000e 461E     		subs	r6, r0, #1
 933 0010 F6B2     		uxtb	r6, r6
 934              	.LVL120:
 935 0012 00E0     		b	.L83
 936              	.LVL121:
 937              	.L91:
1019:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
 938              		.loc 1 1019 0
 939 0014 0026     		movs	r6, #0
 940              	.LVL122:
 941              	.L83:
1095:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1096:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 37


 942              		.loc 1 1096 0
 943 0016 601C     		adds	r0, r4, #1
 944              	.LVL123:
 945 0018 C0B2     		uxtb	r0, r0
 946              	.LVL124:
1097:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1098:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1099:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1100:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1101:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1102:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1103:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 947              		.loc 1 1103 0
 948 001a 11F804E0 		ldrb	lr, [r1, r4]	@ zero_extendqisi2
 949 001e 234F     		ldr	r7, .L93+4
 950 0020 87F805E0 		strb	lr, [r7, #5]
1104:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1105:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1106:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1107:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 951              		.loc 1 1107 0
 952 0024 24B9     		cbnz	r4, .L84
1108:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1109:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 953              		.loc 1 1109 0
 954 0026 0026     		movs	r6, #0
 955              	.LVL125:
 956 0028 3E71     		strb	r6, [r7, #4]
1110:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 957              		.loc 1 1110 0
 958 002a 095C     		ldrb	r1, [r1, r0]	@ zero_extendqisi2
 959              	.LVL126:
 960 002c B971     		strb	r1, [r7, #6]
 961 002e 0DE0     		b	.L85
 962              	.LVL127:
 963              	.L84:
1111:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1112:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 964              		.loc 1 1112 0
 965 0030 013A     		subs	r2, r2, #1
 966              	.LVL128:
 967 0032 9442     		cmp	r4, r2
 968 0034 05D1     		bne	.L86
1113:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1114:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 969              		.loc 1 1114 0
 970 0036 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 971              	.LVL129:
 972 0038 1C4A     		ldr	r2, .L93+4
 973 003a 1171     		strb	r1, [r2, #4]
1115:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 974              		.loc 1 1115 0
 975 003c 0021     		movs	r1, #0
 976 003e 9171     		strb	r1, [r2, #6]
 977 0040 04E0     		b	.L85
 978              	.LVL130:
 979              	.L86:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 38


1116:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1117:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1118:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1119:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 980              		.loc 1 1119 0
 981 0042 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 982              	.LVL131:
 983 0044 194A     		ldr	r2, .L93+4
 984 0046 1671     		strb	r6, [r2, #4]
1120:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 985              		.loc 1 1120 0
 986 0048 095C     		ldrb	r1, [r1, r0]	@ zero_extendqisi2
 987              	.LVL132:
 988 004a 9171     		strb	r1, [r2, #6]
 989              	.L85:
1121:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1122:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1123:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1124:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1125:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1126:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1127:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1128:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1129:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 990              		.loc 1 1129 0
 991 004c 174A     		ldr	r2, .L93+4
 992 004e 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 993 0050 AA42     		cmp	r2, r5
 994 0052 03D9     		bls	.L87
1130:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1131:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 995              		.loc 1 1131 0
 996 0054 521B     		subs	r2, r2, r5
 997 0056 1549     		ldr	r1, .L93+4
 998 0058 0A71     		strb	r2, [r1, #4]
 999 005a 02E0     		b	.L88
 1000              	.L87:
1132:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1133:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1134:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1135:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1001              		.loc 1 1135 0
 1002 005c 0021     		movs	r1, #0
 1003 005e 134A     		ldr	r2, .L93+4
 1004 0060 1171     		strb	r1, [r2, #4]
 1005              	.L88:
1136:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1137:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1138:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1139:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1006              		.loc 1 1139 0
 1007 0062 124A     		ldr	r2, .L93+4
 1008 0064 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1009 0066 491B     		subs	r1, r1, r5
 1010 0068 C9B2     		uxtb	r1, r1
 1011 006a 5171     		strb	r1, [r2, #5]
1140:Generated_Source\PSoC5/CapSense_CSHL.c ****         
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 39


1141:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1142:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1012              		.loc 1 1142 0
 1013 006c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 1014 006e 9542     		cmp	r5, r2
 1015 0070 03D2     		bcs	.L89
1143:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1144:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1016              		.loc 1 1144 0
 1017 0072 551B     		subs	r5, r2, r5
 1018 0074 0D4A     		ldr	r2, .L93+4
 1019 0076 9571     		strb	r5, [r2, #6]
 1020 0078 02E0     		b	.L90
 1021              	.L89:
1145:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1146:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1147:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1148:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1022              		.loc 1 1148 0
 1023 007a 0020     		movs	r0, #0
 1024              	.LVL133:
 1025 007c 0B4A     		ldr	r2, .L93+4
 1026 007e 9071     		strb	r0, [r2, #6]
 1027              	.L90:
1149:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1150:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1151:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1152:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1153:Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1028              		.loc 1 1153 0
 1029 0080 0A4A     		ldr	r2, .L93+4
 1030 0082 9079     		ldrb	r0, [r2, #6]	@ zero_extendqisi2
1154:Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1031              		.loc 1 1154 0
 1032 0084 1579     		ldrb	r5, [r2, #4]	@ zero_extendqisi2
1153:Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1033              		.loc 1 1153 0
 1034 0086 421B     		subs	r2, r0, r5
 1035              	.LVL134:
1155:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1156:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1157:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 1036              		.loc 1 1157 0
 1037 0088 2944     		add	r1, r1, r5
 1038 008a 0844     		add	r0, r0, r1
 1039              	.LVL135:
1158:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1159:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1160:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1161:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1162:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1040              		.loc 1 1162 0
 1041 008c 1202     		lsls	r2, r2, #8
 1042              	.LVL136:
 1043 008e 92FBF0F0 		sdiv	r0, r2, r0
 1044              	.LVL137:
 1045 0092 00EB0420 		add	r0, r0, r4, lsl #8
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 40


 1046              	.LVL138:
1163:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1164:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1165:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1166:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1167:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1168:Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1169:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1170:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1171:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1172:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1047              		.loc 1 1172 0
 1048 0096 1BB2     		sxth	r3, r3
 1049 0098 00FB03F0 		mul	r0, r0, r3
 1050              	.LVL139:
1173:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1174:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1175:Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1051              		.loc 1 1175 0
 1052 009c 00F5FE40 		add	r0, r0, #32512
 1053              	.LVL140:
1176:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1177:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1178:Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
 1054              		.loc 1 1178 0
 1055 00a0 C0F30740 		ubfx	r0, r0, #16, #8
 1056              	.LVL141:
 1057 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1058              	.LVL142:
 1059              	.L94:
 1060 00a6 00BF     		.align	2
 1061              	.L93:
 1062 00a8 00000000 		.word	CapSense_sensorSignal
 1063 00ac 00000000 		.word	.LANCHOR1
 1064              		.cfi_endproc
 1065              	.LFE12:
 1066              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1067              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1068              		.align	2
 1069              		.global	CapSense_GetCentroidPos
 1070              		.thumb
 1071              		.thumb_func
 1072              		.type	CapSense_GetCentroidPos, %function
 1073              	CapSense_GetCentroidPos:
 1074              	.LFB13:
1179:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1180:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1181:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1182:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1183:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1184:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1185:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1186:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1187:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1188:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1189:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1190:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 41


1191:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1192:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1193:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1194:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1195:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1196:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1197:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1198:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1199:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1200:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1201:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1202:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1203:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1204:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1205:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1206:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1207:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1208:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1209:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1210:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1211:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1212:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1213:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1214:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1215:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1216:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1217:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1218:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1219:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1220:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1075              		.loc 1 1220 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL143:
 1080 0000 70B5     		push	{r4, r5, r6, lr}
 1081              		.cfi_def_cfa_offset 16
 1082              		.cfi_offset 4, -16
 1083              		.cfi_offset 5, -12
 1084              		.cfi_offset 6, -8
 1085              		.cfi_offset 14, -4
 1086 0002 82B0     		sub	sp, sp, #8
 1087              		.cfi_def_cfa_offset 24
 1088 0004 0446     		mov	r4, r0
1221:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1222:Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1223:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1224:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1225:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1226:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1227:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1228:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1229:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1230:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1231:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1232:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1233:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 42


1234:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1235:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1236:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1237:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1238:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1239:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1240:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 1089              		.loc 1 1240 0
 1090 0006 0E4B     		ldr	r3, .L99
 1091 0008 1D5C     		ldrb	r5, [r3, r0]	@ zero_extendqisi2
 1092              	.LVL144:
1241:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1093              		.loc 1 1241 0
 1094 000a 0344     		add	r3, r3, r0
 1095 000c 1E79     		ldrb	r6, [r3, #4]	@ zero_extendqisi2
 1096              	.LVL145:
1242:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1243:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1244:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1245:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1246:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1247:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1248:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1249:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1250:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1251:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1252:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1253:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1254:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1255:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1256:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1257:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1258:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1259:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
 1097              		.loc 1 1259 0
 1098 000e 0D4B     		ldr	r3, .L99+4
 1099 0010 0344     		add	r3, r3, r0
 1100 0012 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1101 0014 3146     		mov	r1, r6
 1102 0016 2846     		mov	r0, r5
 1103              	.LVL146:
 1104 0018 FFF7FEFF 		bl	CapSense_FindMaximum
 1105              	.LVL147:
1260:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1261:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1262:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1106              		.loc 1 1262 0
 1107 001c FF28     		cmp	r0, #255
 1108 001e 0BD0     		beq	.L97
1263:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1264:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1265:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1109              		.loc 1 1265 0
 1110 0020 084B     		ldr	r3, .L99+4
 1111 0022 1C44     		add	r4, r4, r3
 1112 0024 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1113 0026 0093     		str	r3, [sp]
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 43


 1114 0028 4FF4C853 		mov	r3, #6400
 1115 002c 3246     		mov	r2, r6
 1116 002e 2946     		mov	r1, r5
 1117 0030 FFF7FEFF 		bl	CapSense_CalcCentroid
 1118              	.LVL148:
 1119 0034 80B2     		uxth	r0, r0
 1120              	.LVL149:
 1121 0036 01E0     		b	.L96
 1122              	.LVL150:
 1123              	.L97:
1266:Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1267:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1268:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1269:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1270:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1271:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1272:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1273:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1274:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1275:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1276:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1277:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1278:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1279:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1280:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1281:Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1282:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1283:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1284:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1285:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1286:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1287:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1288:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1289:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1290:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1291:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1292:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1293:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1294:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1295:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1296:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1297:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1298:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1299:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1300:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1301:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1302:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1303:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1304:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1305:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1306:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1307:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1308:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1309:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1310:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1311:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1312:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 44


1313:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1314:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1315:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1316:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1317:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1318:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1319:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1320:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1321:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1322:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1323:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1324:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1325:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1326:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1327:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1328:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1329:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1330:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1331:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1332:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1333:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1334:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1335:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1336:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1337:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1338:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1339:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1340:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1341:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1342:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1343:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1344:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1345:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1346:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1347:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1348:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1349:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1350:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1351:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1352:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1353:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1354:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1355:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1356:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1357:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1358:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1359:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1360:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1361:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1362:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1363:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1364:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1365:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1366:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1367:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1368:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum wasn't found */
1369:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 45


 1124              		.loc 1 1369 0
 1125 0038 4FF6FF70 		movw	r0, #65535
 1126              	.LVL151:
 1127              	.L96:
1370:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1371:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1372:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1373:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1374:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1375:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1376:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1377:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1378:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1379:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1380:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1381:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1382:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1128              		.loc 1 1382 0
 1129 003c 02B0     		add	sp, sp, #8
 1130              		.cfi_def_cfa_offset 16
 1131              		@ sp needed
 1132 003e 70BD     		pop	{r4, r5, r6, pc}
 1133              	.LVL152:
 1134              	.L100:
 1135              		.align	2
 1136              	.L99:
 1137 0040 00000000 		.word	.LANCHOR2
 1138 0044 00000000 		.word	.LANCHOR0
 1139              		.cfi_endproc
 1140              	.LFE13:
 1141              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1142              		.global	CapSense_centroidMult
 1143              		.global	CapSense_numberOfSensors
 1144              		.global	CapSense_rawDataIndex
 1145              		.global	CapSense_debounceCounter
 1146              		.global	CapSense_debounce
 1147              		.global	CapSense_hysteresis
 1148              		.global	CapSense_noiseThreshold
 1149              		.global	CapSense_fingerThreshold
 1150              		.comm	CapSense_lowBaselineResetCnt,7,4
 1151              		.comm	CapSense_sensorOnMask,1,4
 1152              		.comm	CapSense_sensorSignal,7,4
 1153              		.comm	CapSense_sensorBaselineLow,7,4
 1154              		.comm	CapSense_sensorBaseline,14,4
 1155              		.section	.rodata
 1156              		.align	2
 1157              		.set	.LANCHOR2,. + 0
 1158              		.type	CapSense_rawDataIndex, %object
 1159              		.size	CapSense_rawDataIndex, 3
 1160              	CapSense_rawDataIndex:
 1161 0000 02       		.byte	2
 1162 0001 01       		.byte	1
 1163 0002 00       		.byte	0
 1164 0003 00       		.space	1
 1165              		.type	CapSense_numberOfSensors, %object
 1166              		.size	CapSense_numberOfSensors, 3
 1167              	CapSense_numberOfSensors:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 46


 1168 0004 05       		.byte	5
 1169 0005 01       		.byte	1
 1170 0006 01       		.byte	1
 1171 0007 00       		.space	1
 1172              		.type	CapSense_centroidMult, %object
 1173              		.size	CapSense_centroidMult, 2
 1174              	CapSense_centroidMult:
 1175 0008 0019     		.short	6400
 1176              		.data
 1177              		.align	2
 1178              		.set	.LANCHOR0,. + 0
 1179              		.type	CapSense_debounce, %object
 1180              		.size	CapSense_debounce, 3
 1181              	CapSense_debounce:
 1182 0000 01       		.byte	1
 1183 0001 01       		.byte	1
 1184 0002 01       		.byte	1
 1185 0003 00       		.space	1
 1186              		.type	CapSense_noiseThreshold, %object
 1187              		.size	CapSense_noiseThreshold, 3
 1188              	CapSense_noiseThreshold:
 1189 0004 14       		.byte	20
 1190 0005 28       		.byte	40
 1191 0006 28       		.byte	40
 1192 0007 00       		.space	1
 1193              		.type	CapSense_fingerThreshold, %object
 1194              		.size	CapSense_fingerThreshold, 3
 1195              	CapSense_fingerThreshold:
 1196 0008 28       		.byte	40
 1197 0009 50       		.byte	80
 1198 000a 50       		.byte	80
 1199 000b 00       		.space	1
 1200              		.type	CapSense_hysteresis, %object
 1201              		.size	CapSense_hysteresis, 3
 1202              	CapSense_hysteresis:
 1203 000c 00       		.byte	0
 1204 000d 05       		.byte	5
 1205 000e 05       		.byte	5
 1206              		.bss
 1207              		.align	2
 1208              		.set	.LANCHOR1,. + 0
 1209              		.type	CapSense_debounceCounter, %object
 1210              		.size	CapSense_debounceCounter, 3
 1211              	CapSense_debounceCounter:
 1212 0000 000000   		.space	3
 1213 0003 00       		.space	1
 1214              		.type	CapSense_centroid.5253, %object
 1215              		.size	CapSense_centroid.5253, 3
 1216              	CapSense_centroid.5253:
 1217 0004 000000   		.space	3
 1218              		.text
 1219              	.Letext0:
 1220              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1221              		.file 3 "Generated_Source\\PSoC5\\CapSense.h"
 1222              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSHL.h"
 1223              		.section	.debug_info,"",%progbits
 1224              	.Ldebug_info0:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 47


 1225 0000 AD080000 		.4byte	0x8ad
 1226 0004 0400     		.2byte	0x4
 1227 0006 00000000 		.4byte	.Ldebug_abbrev0
 1228 000a 04       		.byte	0x4
 1229 000b 01       		.uleb128 0x1
 1230 000c 5D040000 		.4byte	.LASF80
 1231 0010 0C       		.byte	0xc
 1232 0011 76050000 		.4byte	.LASF81
 1233 0015 65010000 		.4byte	.LASF82
 1234 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1235 001d 00000000 		.4byte	0
 1236 0021 00000000 		.4byte	.Ldebug_line0
 1237 0025 02       		.uleb128 0x2
 1238 0026 01       		.byte	0x1
 1239 0027 06       		.byte	0x6
 1240 0028 DE000000 		.4byte	.LASF0
 1241 002c 02       		.uleb128 0x2
 1242 002d 01       		.byte	0x1
 1243 002e 08       		.byte	0x8
 1244 002f 08040000 		.4byte	.LASF1
 1245 0033 02       		.uleb128 0x2
 1246 0034 02       		.byte	0x2
 1247 0035 05       		.byte	0x5
 1248 0036 45040000 		.4byte	.LASF2
 1249 003a 02       		.uleb128 0x2
 1250 003b 02       		.byte	0x2
 1251 003c 07       		.byte	0x7
 1252 003d 7E020000 		.4byte	.LASF3
 1253 0041 02       		.uleb128 0x2
 1254 0042 04       		.byte	0x4
 1255 0043 05       		.byte	0x5
 1256 0044 26010000 		.4byte	.LASF4
 1257 0048 02       		.uleb128 0x2
 1258 0049 04       		.byte	0x4
 1259 004a 07       		.byte	0x7
 1260 004b 3B020000 		.4byte	.LASF5
 1261 004f 02       		.uleb128 0x2
 1262 0050 08       		.byte	0x8
 1263 0051 05       		.byte	0x5
 1264 0052 D0000000 		.4byte	.LASF6
 1265 0056 02       		.uleb128 0x2
 1266 0057 08       		.byte	0x8
 1267 0058 07       		.byte	0x7
 1268 0059 5F000000 		.4byte	.LASF7
 1269 005d 03       		.uleb128 0x3
 1270 005e 04       		.byte	0x4
 1271 005f 05       		.byte	0x5
 1272 0060 696E7400 		.ascii	"int\000"
 1273 0064 02       		.uleb128 0x2
 1274 0065 04       		.byte	0x4
 1275 0066 07       		.byte	0x7
 1276 0067 25020000 		.4byte	.LASF8
 1277 006b 04       		.uleb128 0x4
 1278 006c B9010000 		.4byte	.LASF9
 1279 0070 02       		.byte	0x2
 1280 0071 9201     		.2byte	0x192
 1281 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 48


 1282 0077 04       		.uleb128 0x4
 1283 0078 06000000 		.4byte	.LASF10
 1284 007c 02       		.byte	0x2
 1285 007d 9301     		.2byte	0x193
 1286 007f 3A000000 		.4byte	0x3a
 1287 0083 04       		.uleb128 0x4
 1288 0084 DC010000 		.4byte	.LASF11
 1289 0088 02       		.byte	0x2
 1290 0089 9401     		.2byte	0x194
 1291 008b 48000000 		.4byte	0x48
 1292 008f 04       		.uleb128 0x4
 1293 0090 9D050000 		.4byte	.LASF12
 1294 0094 02       		.byte	0x2
 1295 0095 9601     		.2byte	0x196
 1296 0097 33000000 		.4byte	0x33
 1297 009b 04       		.uleb128 0x4
 1298 009c 1A010000 		.4byte	.LASF13
 1299 00a0 02       		.byte	0x2
 1300 00a1 9701     		.2byte	0x197
 1301 00a3 41000000 		.4byte	0x41
 1302 00a7 02       		.uleb128 0x2
 1303 00a8 04       		.byte	0x4
 1304 00a9 04       		.byte	0x4
 1305 00aa E5030000 		.4byte	.LASF14
 1306 00ae 02       		.uleb128 0x2
 1307 00af 08       		.byte	0x8
 1308 00b0 04       		.byte	0x4
 1309 00b1 BF010000 		.4byte	.LASF15
 1310 00b5 02       		.uleb128 0x2
 1311 00b6 01       		.byte	0x1
 1312 00b7 08       		.byte	0x8
 1313 00b8 4A050000 		.4byte	.LASF16
 1314 00bc 02       		.uleb128 0x2
 1315 00bd 08       		.byte	0x8
 1316 00be 04       		.byte	0x4
 1317 00bf 4C030000 		.4byte	.LASF17
 1318 00c3 02       		.uleb128 0x2
 1319 00c4 04       		.byte	0x4
 1320 00c5 07       		.byte	0x7
 1321 00c6 2D030000 		.4byte	.LASF18
 1322 00ca 05       		.uleb128 0x5
 1323 00cb EB040000 		.4byte	.LASF19
 1324 00cf 01       		.byte	0x1
 1325 00d0 81       		.byte	0x81
 1326 00d1 00000000 		.4byte	.LFB0
 1327 00d5 44000000 		.4byte	.LFE0-.LFB0
 1328 00d9 01       		.uleb128 0x1
 1329 00da 9C       		.byte	0x9c
 1330 00db FC000000 		.4byte	0xfc
 1331 00df 06       		.uleb128 0x6
 1332 00e0 91020000 		.4byte	.LASF21
 1333 00e4 01       		.byte	0x1
 1334 00e5 81       		.byte	0x81
 1335 00e6 6B000000 		.4byte	0x6b
 1336 00ea 01       		.uleb128 0x1
 1337 00eb 50       		.byte	0x50
 1338 00ec 07       		.uleb128 0x7
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 49


 1339 00ed 4F040000 		.4byte	.LASF23
 1340 00f1 01       		.byte	0x1
 1341 00f2 85       		.byte	0x85
 1342 00f3 6B000000 		.4byte	0x6b
 1343 00f7 00000000 		.4byte	.LLST0
 1344 00fb 00       		.byte	0
 1345 00fc 05       		.uleb128 0x5
 1346 00fd 58030000 		.4byte	.LASF20
 1347 0101 01       		.byte	0x1
 1348 0102 CD       		.byte	0xcd
 1349 0103 00000000 		.4byte	.LFB1
 1350 0107 18000000 		.4byte	.LFE1-.LFB1
 1351 010b 01       		.uleb128 0x1
 1352 010c 9C       		.byte	0x9c
 1353 010d 4E010000 		.4byte	0x14e
 1354 0111 08       		.uleb128 0x8
 1355 0112 91020000 		.4byte	.LASF21
 1356 0116 01       		.byte	0x1
 1357 0117 CD       		.byte	0xcd
 1358 0118 6B000000 		.4byte	0x6b
 1359 011c 20000000 		.4byte	.LLST1
 1360 0120 09       		.uleb128 0x9
 1361 0121 08000000 		.4byte	.LVL5
 1362 0125 84080000 		.4byte	0x884
 1363 0129 34010000 		.4byte	0x134
 1364 012d 0A       		.uleb128 0xa
 1365 012e 01       		.uleb128 0x1
 1366 012f 50       		.byte	0x50
 1367 0130 02       		.uleb128 0x2
 1368 0131 74       		.byte	0x74
 1369 0132 00       		.sleb128 0
 1370 0133 00       		.byte	0
 1371 0134 0B       		.uleb128 0xb
 1372 0135 0C000000 		.4byte	.LVL6
 1373 0139 8F080000 		.4byte	0x88f
 1374 013d 0C       		.uleb128 0xc
 1375 013e 16000000 		.4byte	.LVL7
 1376 0142 CA000000 		.4byte	0xca
 1377 0146 0A       		.uleb128 0xa
 1378 0147 01       		.uleb128 0x1
 1379 0148 50       		.byte	0x50
 1380 0149 02       		.uleb128 0x2
 1381 014a 74       		.byte	0x74
 1382 014b 00       		.sleb128 0
 1383 014c 00       		.byte	0
 1384 014d 00       		.byte	0
 1385 014e 0D       		.uleb128 0xd
 1386 014f 16040000 		.4byte	.LASF22
 1387 0153 01       		.byte	0x1
 1388 0154 0101     		.2byte	0x101
 1389 0156 00000000 		.4byte	.LFB2
 1390 015a 16000000 		.4byte	.LFE2-.LFB2
 1391 015e 01       		.uleb128 0x1
 1392 015f 9C       		.byte	0x9c
 1393 0160 83010000 		.4byte	0x183
 1394 0164 0E       		.uleb128 0xe
 1395 0165 6900     		.ascii	"i\000"
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 50


 1396 0167 01       		.byte	0x1
 1397 0168 0401     		.2byte	0x104
 1398 016a 6B000000 		.4byte	0x6b
 1399 016e 41000000 		.4byte	.LLST2
 1400 0172 0C       		.uleb128 0xc
 1401 0173 0C000000 		.4byte	.LVL10
 1402 0177 FC000000 		.4byte	0xfc
 1403 017b 0A       		.uleb128 0xa
 1404 017c 01       		.uleb128 0x1
 1405 017d 50       		.byte	0x50
 1406 017e 02       		.uleb128 0x2
 1407 017f 74       		.byte	0x74
 1408 0180 00       		.sleb128 0
 1409 0181 00       		.byte	0
 1410 0182 00       		.byte	0
 1411 0183 0D       		.uleb128 0xd
 1412 0184 8C000000 		.4byte	.LASF24
 1413 0188 01       		.byte	0x1
 1414 0189 2201     		.2byte	0x122
 1415 018b 00000000 		.4byte	.LFB3
 1416 018f 44000000 		.4byte	.LFE3-.LFB3
 1417 0193 01       		.uleb128 0x1
 1418 0194 9C       		.byte	0x9c
 1419 0195 E8010000 		.4byte	0x1e8
 1420 0199 0E       		.uleb128 0xe
 1421 019a 6900     		.ascii	"i\000"
 1422 019c 01       		.byte	0x1
 1423 019d 2501     		.2byte	0x125
 1424 019f 6B000000 		.4byte	0x6b
 1425 01a3 6B000000 		.4byte	.LLST3
 1426 01a7 0F       		.uleb128 0xf
 1427 01a8 706F7300 		.ascii	"pos\000"
 1428 01ac 01       		.byte	0x1
 1429 01ad 2601     		.2byte	0x126
 1430 01af 6B000000 		.4byte	0x6b
 1431 01b3 01       		.uleb128 0x1
 1432 01b4 52       		.byte	0x52
 1433 01b5 10       		.uleb128 0x10
 1434 01b6 97030000 		.4byte	.LASF25
 1435 01ba 01       		.byte	0x1
 1436 01bb 2701     		.2byte	0x127
 1437 01bd 6B000000 		.4byte	0x6b
 1438 01c1 89000000 		.4byte	.LLST4
 1439 01c5 0B       		.uleb128 0xb
 1440 01c6 06000000 		.4byte	.LVL13
 1441 01ca 9A080000 		.4byte	0x89a
 1442 01ce 0B       		.uleb128 0xb
 1443 01cf 0A000000 		.4byte	.LVL14
 1444 01d3 8F080000 		.4byte	0x88f
 1445 01d7 0C       		.uleb128 0xc
 1446 01d8 32000000 		.4byte	.LVL18
 1447 01dc CA000000 		.4byte	0xca
 1448 01e0 0A       		.uleb128 0xa
 1449 01e1 01       		.uleb128 0x1
 1450 01e2 50       		.byte	0x50
 1451 01e3 02       		.uleb128 0x2
 1452 01e4 74       		.byte	0x74
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 51


 1453 01e5 00       		.sleb128 0
 1454 01e6 00       		.byte	0
 1455 01e7 00       		.byte	0
 1456 01e8 0D       		.uleb128 0xd
 1457 01e9 C7020000 		.4byte	.LASF26
 1458 01ed 01       		.byte	0x1
 1459 01ee 6501     		.2byte	0x165
 1460 01f0 00000000 		.4byte	.LFB4
 1461 01f4 C8000000 		.4byte	.LFE4-.LFB4
 1462 01f8 01       		.uleb128 0x1
 1463 01f9 9C       		.byte	0x9c
 1464 01fa 83020000 		.4byte	0x283
 1465 01fe 11       		.uleb128 0x11
 1466 01ff 91020000 		.4byte	.LASF21
 1467 0203 01       		.byte	0x1
 1468 0204 6501     		.2byte	0x165
 1469 0206 6B000000 		.4byte	0x6b
 1470 020a BE000000 		.4byte	.LLST5
 1471 020e 10       		.uleb128 0x10
 1472 020f E5020000 		.4byte	.LASF27
 1473 0213 01       		.byte	0x1
 1474 0214 6801     		.2byte	0x168
 1475 0216 83000000 		.4byte	0x83
 1476 021a DF000000 		.4byte	.LLST6
 1477 021e 10       		.uleb128 0x10
 1478 021f 01060000 		.4byte	.LASF28
 1479 0223 01       		.byte	0x1
 1480 0224 6901     		.2byte	0x169
 1481 0226 77000000 		.4byte	0x77
 1482 022a 01010000 		.4byte	.LLST7
 1483 022e 10       		.uleb128 0x10
 1484 022f 0D000000 		.4byte	.LASF29
 1485 0233 01       		.byte	0x1
 1486 0234 6A01     		.2byte	0x16a
 1487 0236 77000000 		.4byte	0x77
 1488 023a 1F010000 		.4byte	.LLST8
 1489 023e 10       		.uleb128 0x10
 1490 023f 4F040000 		.4byte	.LASF23
 1491 0243 01       		.byte	0x1
 1492 0244 6B01     		.2byte	0x16b
 1493 0246 6B000000 		.4byte	0x6b
 1494 024a 32010000 		.4byte	.LLST9
 1495 024e 10       		.uleb128 0x10
 1496 024f 36040000 		.4byte	.LASF30
 1497 0253 01       		.byte	0x1
 1498 0254 6C01     		.2byte	0x16c
 1499 0256 6B000000 		.4byte	0x6b
 1500 025a 7B010000 		.4byte	.LLST10
 1501 025e 09       		.uleb128 0x9
 1502 025f 1A000000 		.4byte	.LVL28
 1503 0263 A5080000 		.4byte	0x8a5
 1504 0267 72020000 		.4byte	0x272
 1505 026b 0A       		.uleb128 0xa
 1506 026c 01       		.uleb128 0x1
 1507 026d 50       		.byte	0x50
 1508 026e 02       		.uleb128 0x2
 1509 026f 74       		.byte	0x74
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 52


 1510 0270 00       		.sleb128 0
 1511 0271 00       		.byte	0
 1512 0272 0C       		.uleb128 0xc
 1513 0273 4A000000 		.4byte	.LVL33
 1514 0277 CA000000 		.4byte	0xca
 1515 027b 0A       		.uleb128 0xa
 1516 027c 01       		.uleb128 0x1
 1517 027d 50       		.byte	0x50
 1518 027e 02       		.uleb128 0x2
 1519 027f 74       		.byte	0x74
 1520 0280 00       		.sleb128 0
 1521 0281 00       		.byte	0
 1522 0282 00       		.byte	0
 1523 0283 0D       		.uleb128 0xd
 1524 0284 B0000000 		.4byte	.LASF31
 1525 0288 01       		.byte	0x1
 1526 0289 1202     		.2byte	0x212
 1527 028b 00000000 		.4byte	.LFB5
 1528 028f 2C000000 		.4byte	.LFE5-.LFB5
 1529 0293 01       		.uleb128 0x1
 1530 0294 9C       		.byte	0x9c
 1531 0295 D6020000 		.4byte	0x2d6
 1532 0299 0E       		.uleb128 0xe
 1533 029a 6900     		.ascii	"i\000"
 1534 029c 01       		.byte	0x1
 1535 029d 1502     		.2byte	0x215
 1536 029f 6B000000 		.4byte	0x6b
 1537 02a3 8E010000 		.4byte	.LLST11
 1538 02a7 0F       		.uleb128 0xf
 1539 02a8 706F7300 		.ascii	"pos\000"
 1540 02ac 01       		.byte	0x1
 1541 02ad 1602     		.2byte	0x216
 1542 02af 6B000000 		.4byte	0x6b
 1543 02b3 01       		.uleb128 0x1
 1544 02b4 52       		.byte	0x52
 1545 02b5 10       		.uleb128 0x10
 1546 02b6 97030000 		.4byte	.LASF25
 1547 02ba 01       		.byte	0x1
 1548 02bb 1702     		.2byte	0x217
 1549 02bd 6B000000 		.4byte	0x6b
 1550 02c1 B8010000 		.4byte	.LLST12
 1551 02c5 0C       		.uleb128 0xc
 1552 02c6 1E000000 		.4byte	.LVL46
 1553 02ca E8010000 		.4byte	0x1e8
 1554 02ce 0A       		.uleb128 0xa
 1555 02cf 01       		.uleb128 0x1
 1556 02d0 50       		.byte	0x50
 1557 02d1 02       		.uleb128 0x2
 1558 02d2 74       		.byte	0x74
 1559 02d3 00       		.sleb128 0
 1560 02d4 00       		.byte	0
 1561 02d5 00       		.byte	0
 1562 02d6 12       		.uleb128 0x12
 1563 02d7 7A030000 		.4byte	.LASF37
 1564 02db 01       		.byte	0x1
 1565 02dc 4C02     		.2byte	0x24c
 1566 02de 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 53


 1567 02e2 00000000 		.4byte	.LFB6
 1568 02e6 9C000000 		.4byte	.LFE6-.LFB6
 1569 02ea 01       		.uleb128 0x1
 1570 02eb 9C       		.byte	0x9c
 1571 02ec 6F030000 		.4byte	0x36f
 1572 02f0 11       		.uleb128 0x11
 1573 02f1 91020000 		.4byte	.LASF21
 1574 02f5 01       		.byte	0x1
 1575 02f6 4C02     		.2byte	0x24c
 1576 02f8 6B000000 		.4byte	0x6b
 1577 02fc ED010000 		.4byte	.LLST13
 1578 0300 10       		.uleb128 0x10
 1579 0301 68050000 		.4byte	.LASF32
 1580 0305 01       		.byte	0x1
 1581 0306 4F02     		.2byte	0x24f
 1582 0308 6B000000 		.4byte	0x6b
 1583 030c 27020000 		.4byte	.LLST14
 1584 0310 0E       		.uleb128 0xe
 1585 0311 706F7300 		.ascii	"pos\000"
 1586 0315 01       		.byte	0x1
 1587 0316 5102     		.2byte	0x251
 1588 0318 6B000000 		.4byte	0x6b
 1589 031c 51020000 		.4byte	.LLST15
 1590 0320 13       		.uleb128 0x13
 1591 0321 56040000 		.4byte	.LASF33
 1592 0325 01       		.byte	0x1
 1593 0326 5202     		.2byte	0x252
 1594 0328 6B000000 		.4byte	0x6b
 1595 032c 01       		.uleb128 0x1
 1596 032d 53       		.byte	0x53
 1597 032e 10       		.uleb128 0x10
 1598 032f 4F040000 		.4byte	.LASF23
 1599 0333 01       		.byte	0x1
 1600 0334 5402     		.2byte	0x254
 1601 0336 6B000000 		.4byte	0x6b
 1602 033a 64020000 		.4byte	.LLST16
 1603 033e 10       		.uleb128 0x10
 1604 033f 47000000 		.4byte	.LASF34
 1605 0343 01       		.byte	0x1
 1606 0344 5502     		.2byte	0x255
 1607 0346 6B000000 		.4byte	0x6b
 1608 034a 8F020000 		.4byte	.LLST17
 1609 034e 10       		.uleb128 0x10
 1610 034f E3010000 		.4byte	.LASF35
 1611 0353 01       		.byte	0x1
 1612 0354 5602     		.2byte	0x256
 1613 0356 6B000000 		.4byte	0x6b
 1614 035a A2020000 		.4byte	.LLST18
 1615 035e 10       		.uleb128 0x10
 1616 035f 24030000 		.4byte	.LASF36
 1617 0363 01       		.byte	0x1
 1618 0364 5702     		.2byte	0x257
 1619 0366 6B000000 		.4byte	0x6b
 1620 036a C0020000 		.4byte	.LLST19
 1621 036e 00       		.byte	0
 1622 036f 12       		.uleb128 0x12
 1623 0370 EB030000 		.4byte	.LASF38
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 54


 1624 0374 01       		.byte	0x1
 1625 0375 9C02     		.2byte	0x29c
 1626 0377 6B000000 		.4byte	0x6b
 1627 037b 00000000 		.4byte	.LFB7
 1628 037f 2C000000 		.4byte	.LFE7-.LFB7
 1629 0383 01       		.uleb128 0x1
 1630 0384 9C       		.byte	0x9c
 1631 0385 DA030000 		.4byte	0x3da
 1632 0389 11       		.uleb128 0x11
 1633 038a 4F040000 		.4byte	.LASF23
 1634 038e 01       		.byte	0x1
 1635 038f 9C02     		.2byte	0x29c
 1636 0391 6B000000 		.4byte	0x6b
 1637 0395 D3020000 		.4byte	.LLST20
 1638 0399 10       		.uleb128 0x10
 1639 039a 01010000 		.4byte	.LASF39
 1640 039e 01       		.byte	0x1
 1641 039f 9F02     		.2byte	0x29f
 1642 03a1 6B000000 		.4byte	0x6b
 1643 03a5 F4020000 		.4byte	.LLST21
 1644 03a9 10       		.uleb128 0x10
 1645 03aa 0A010000 		.4byte	.LASF40
 1646 03ae 01       		.byte	0x1
 1647 03af A002     		.2byte	0x2a0
 1648 03b1 6B000000 		.4byte	0x6b
 1649 03b5 12030000 		.4byte	.LLST22
 1650 03b9 10       		.uleb128 0x10
 1651 03ba 20010000 		.4byte	.LASF41
 1652 03be 01       		.byte	0x1
 1653 03bf A102     		.2byte	0x2a1
 1654 03c1 6B000000 		.4byte	0x6b
 1655 03c5 25030000 		.4byte	.LLST23
 1656 03c9 0C       		.uleb128 0xc
 1657 03ca 16000000 		.4byte	.LVL76
 1658 03ce D6020000 		.4byte	0x2d6
 1659 03d2 0A       		.uleb128 0xa
 1660 03d3 01       		.uleb128 0x1
 1661 03d4 50       		.byte	0x50
 1662 03d5 02       		.uleb128 0x2
 1663 03d6 74       		.byte	0x74
 1664 03d7 00       		.sleb128 0
 1665 03d8 00       		.byte	0
 1666 03d9 00       		.byte	0
 1667 03da 12       		.uleb128 0x12
 1668 03db 39010000 		.4byte	.LASF42
 1669 03df 01       		.byte	0x1
 1670 03e0 C802     		.2byte	0x2c8
 1671 03e2 6B000000 		.4byte	0x6b
 1672 03e6 00000000 		.4byte	.LFB8
 1673 03ea 1E000000 		.4byte	.LFE8-.LFB8
 1674 03ee 01       		.uleb128 0x1
 1675 03ef 9C       		.byte	0x9c
 1676 03f0 23040000 		.4byte	0x423
 1677 03f4 0E       		.uleb128 0xe
 1678 03f5 6900     		.ascii	"i\000"
 1679 03f7 01       		.byte	0x1
 1680 03f8 CB02     		.2byte	0x2cb
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 55


 1681 03fa 6B000000 		.4byte	0x6b
 1682 03fe 44030000 		.4byte	.LLST24
 1683 0402 10       		.uleb128 0x10
 1684 0403 20010000 		.4byte	.LASF41
 1685 0407 01       		.byte	0x1
 1686 0408 CC02     		.2byte	0x2cc
 1687 040a 6B000000 		.4byte	0x6b
 1688 040e 6E030000 		.4byte	.LLST25
 1689 0412 0C       		.uleb128 0xc
 1690 0413 0E000000 		.4byte	.LVL83
 1691 0417 6F030000 		.4byte	0x36f
 1692 041b 0A       		.uleb128 0xa
 1693 041c 01       		.uleb128 0x1
 1694 041d 50       		.byte	0x50
 1695 041e 02       		.uleb128 0x2
 1696 041f 74       		.byte	0x74
 1697 0420 00       		.sleb128 0
 1698 0421 00       		.byte	0
 1699 0422 00       		.byte	0
 1700 0423 0D       		.uleb128 0xd
 1701 0424 36030000 		.4byte	.LASF43
 1702 0428 01       		.byte	0x1
 1703 0429 F602     		.2byte	0x2f6
 1704 042b 00000000 		.4byte	.LFB9
 1705 042f 38000000 		.4byte	.LFE9-.LFB9
 1706 0433 01       		.uleb128 0x1
 1707 0434 9C       		.byte	0x9c
 1708 0435 88040000 		.4byte	0x488
 1709 0439 11       		.uleb128 0x11
 1710 043a 4F040000 		.4byte	.LASF23
 1711 043e 01       		.byte	0x1
 1712 043f F602     		.2byte	0x2f6
 1713 0441 6B000000 		.4byte	0x6b
 1714 0445 8D030000 		.4byte	.LLST26
 1715 0449 0F       		.uleb128 0xf
 1716 044a 706F7300 		.ascii	"pos\000"
 1717 044e 01       		.byte	0x1
 1718 044f F902     		.2byte	0x2f9
 1719 0451 6B000000 		.4byte	0x6b
 1720 0455 01       		.uleb128 0x1
 1721 0456 50       		.byte	0x50
 1722 0457 10       		.uleb128 0x10
 1723 0458 97030000 		.4byte	.LASF25
 1724 045c 01       		.byte	0x1
 1725 045d FA02     		.2byte	0x2fa
 1726 045f 6B000000 		.4byte	0x6b
 1727 0463 AE030000 		.4byte	.LLST27
 1728 0467 10       		.uleb128 0x10
 1729 0468 01010000 		.4byte	.LASF39
 1730 046c 01       		.byte	0x1
 1731 046d FB02     		.2byte	0x2fb
 1732 046f 6B000000 		.4byte	0x6b
 1733 0473 E3030000 		.4byte	.LLST28
 1734 0477 10       		.uleb128 0x10
 1735 0478 0A010000 		.4byte	.LASF40
 1736 047c 01       		.byte	0x1
 1737 047d FC02     		.2byte	0x2fc
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 56


 1738 047f 6B000000 		.4byte	0x6b
 1739 0483 01040000 		.4byte	.LLST29
 1740 0487 00       		.byte	0
 1741 0488 0D       		.uleb128 0xd
 1742 0489 EA000000 		.4byte	.LASF44
 1743 048d 01       		.byte	0x1
 1744 048e 2803     		.2byte	0x328
 1745 0490 00000000 		.4byte	.LFB10
 1746 0494 38000000 		.4byte	.LFE10-.LFB10
 1747 0498 01       		.uleb128 0x1
 1748 0499 9C       		.byte	0x9c
 1749 049a ED040000 		.4byte	0x4ed
 1750 049e 11       		.uleb128 0x11
 1751 049f 4F040000 		.4byte	.LASF23
 1752 04a3 01       		.byte	0x1
 1753 04a4 2803     		.2byte	0x328
 1754 04a6 6B000000 		.4byte	0x6b
 1755 04aa 14040000 		.4byte	.LLST30
 1756 04ae 0F       		.uleb128 0xf
 1757 04af 706F7300 		.ascii	"pos\000"
 1758 04b3 01       		.byte	0x1
 1759 04b4 2B03     		.2byte	0x32b
 1760 04b6 6B000000 		.4byte	0x6b
 1761 04ba 01       		.uleb128 0x1
 1762 04bb 50       		.byte	0x50
 1763 04bc 10       		.uleb128 0x10
 1764 04bd 97030000 		.4byte	.LASF25
 1765 04c1 01       		.byte	0x1
 1766 04c2 2C03     		.2byte	0x32c
 1767 04c4 6B000000 		.4byte	0x6b
 1768 04c8 35040000 		.4byte	.LLST31
 1769 04cc 10       		.uleb128 0x10
 1770 04cd 01010000 		.4byte	.LASF39
 1771 04d1 01       		.byte	0x1
 1772 04d2 2D03     		.2byte	0x32d
 1773 04d4 6B000000 		.4byte	0x6b
 1774 04d8 6A040000 		.4byte	.LLST32
 1775 04dc 10       		.uleb128 0x10
 1776 04dd 0A010000 		.4byte	.LASF40
 1777 04e1 01       		.byte	0x1
 1778 04e2 2E03     		.2byte	0x32e
 1779 04e4 6B000000 		.4byte	0x6b
 1780 04e8 88040000 		.4byte	.LLST33
 1781 04ec 00       		.byte	0
 1782 04ed 12       		.uleb128 0x12
 1783 04ee B2020000 		.4byte	.LASF45
 1784 04f2 01       		.byte	0x1
 1785 04f3 5A03     		.2byte	0x35a
 1786 04f5 6B000000 		.4byte	0x6b
 1787 04f9 00000000 		.4byte	.LFB11
 1788 04fd 2C000000 		.4byte	.LFE11-.LFB11
 1789 0501 01       		.uleb128 0x1
 1790 0502 9C       		.byte	0x9c
 1791 0503 72050000 		.4byte	0x572
 1792 0507 11       		.uleb128 0x11
 1793 0508 61050000 		.4byte	.LASF46
 1794 050c 01       		.byte	0x1
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 57


 1795 050d 5A03     		.2byte	0x35a
 1796 050f 6B000000 		.4byte	0x6b
 1797 0513 9B040000 		.4byte	.LLST34
 1798 0517 14       		.uleb128 0x14
 1799 0518 00000000 		.4byte	.LASF47
 1800 051c 01       		.byte	0x1
 1801 051d 5A03     		.2byte	0x35a
 1802 051f 6B000000 		.4byte	0x6b
 1803 0523 01       		.uleb128 0x1
 1804 0524 51       		.byte	0x51
 1805 0525 14       		.uleb128 0x14
 1806 0526 47000000 		.4byte	.LASF34
 1807 052a 01       		.byte	0x1
 1808 052b 5A03     		.2byte	0x35a
 1809 052d 6B000000 		.4byte	0x6b
 1810 0531 01       		.uleb128 0x1
 1811 0532 52       		.byte	0x52
 1812 0533 0E       		.uleb128 0xe
 1813 0534 6900     		.ascii	"i\000"
 1814 0536 01       		.byte	0x1
 1815 0537 5E03     		.2byte	0x35e
 1816 0539 6B000000 		.4byte	0x6b
 1817 053d BC040000 		.4byte	.LLST35
 1818 0541 10       		.uleb128 0x10
 1819 0542 EE010000 		.4byte	.LASF48
 1820 0546 01       		.byte	0x1
 1821 0547 6803     		.2byte	0x368
 1822 0549 6B000000 		.4byte	0x6b
 1823 054d E6040000 		.4byte	.LLST36
 1824 0551 10       		.uleb128 0x10
 1825 0552 0C020000 		.4byte	.LASF49
 1826 0556 01       		.byte	0x1
 1827 0557 6903     		.2byte	0x369
 1828 0559 6B000000 		.4byte	0x6b
 1829 055d 06050000 		.4byte	.LLST37
 1830 0561 10       		.uleb128 0x10
 1831 0562 FE010000 		.4byte	.LASF50
 1832 0566 01       		.byte	0x1
 1833 0567 6A03     		.2byte	0x36a
 1834 0569 72050000 		.4byte	0x572
 1835 056d 30050000 		.4byte	.LLST38
 1836 0571 00       		.byte	0
 1837 0572 15       		.uleb128 0x15
 1838 0573 04       		.byte	0x4
 1839 0574 6B000000 		.4byte	0x6b
 1840 0578 12       		.uleb128 0x12
 1841 0579 B6050000 		.4byte	.LASF51
 1842 057d 01       		.byte	0x1
 1843 057e F603     		.2byte	0x3f6
 1844 0580 6B000000 		.4byte	0x6b
 1845 0584 00000000 		.4byte	.LFB12
 1846 0588 B0000000 		.4byte	.LFE12-.LFB12
 1847 058c 01       		.uleb128 0x1
 1848 058d 9C       		.byte	0x9c
 1849 058e 53060000 		.4byte	0x653
 1850 0592 11       		.uleb128 0x11
 1851 0593 EE010000 		.4byte	.LASF48
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 58


 1852 0597 01       		.byte	0x1
 1853 0598 F603     		.2byte	0x3f6
 1854 059a 6B000000 		.4byte	0x6b
 1855 059e 43050000 		.4byte	.LLST39
 1856 05a2 11       		.uleb128 0x11
 1857 05a3 61050000 		.4byte	.LASF46
 1858 05a7 01       		.byte	0x1
 1859 05a8 F603     		.2byte	0x3f6
 1860 05aa 6B000000 		.4byte	0x6b
 1861 05ae 64050000 		.4byte	.LLST40
 1862 05b2 11       		.uleb128 0x11
 1863 05b3 00000000 		.4byte	.LASF47
 1864 05b7 01       		.byte	0x1
 1865 05b8 F703     		.2byte	0x3f7
 1866 05ba 6B000000 		.4byte	0x6b
 1867 05be 85050000 		.4byte	.LLST41
 1868 05c2 14       		.uleb128 0x14
 1869 05c3 FD040000 		.4byte	.LASF52
 1870 05c7 01       		.byte	0x1
 1871 05c8 F703     		.2byte	0x3f7
 1872 05ca 77000000 		.4byte	0x77
 1873 05ce 01       		.uleb128 0x1
 1874 05cf 53       		.byte	0x53
 1875 05d0 11       		.uleb128 0x11
 1876 05d1 36040000 		.4byte	.LASF30
 1877 05d5 01       		.byte	0x1
 1878 05d6 F703     		.2byte	0x3f7
 1879 05d8 6B000000 		.4byte	0x6b
 1880 05dc A6050000 		.4byte	.LLST42
 1881 05e0 10       		.uleb128 0x10
 1882 05e1 57000000 		.4byte	.LASF53
 1883 05e5 01       		.byte	0x1
 1884 05e6 FB03     		.2byte	0x3fb
 1885 05e8 6B000000 		.4byte	0x6b
 1886 05ec C6050000 		.4byte	.LLST43
 1887 05f0 10       		.uleb128 0x10
 1888 05f1 F6010000 		.4byte	.LASF54
 1889 05f5 01       		.byte	0x1
 1890 05f6 FC03     		.2byte	0x3fc
 1891 05f8 6B000000 		.4byte	0x6b
 1892 05fc 07060000 		.4byte	.LLST44
 1893 0600 13       		.uleb128 0x13
 1894 0601 4F050000 		.4byte	.LASF55
 1895 0605 01       		.byte	0x1
 1896 0606 0404     		.2byte	0x404
 1897 0608 53060000 		.4byte	0x653
 1898 060c 05       		.uleb128 0x5
 1899 060d 03       		.byte	0x3
 1900 060e 04000000 		.4byte	CapSense_centroid.5253
 1901 0612 10       		.uleb128 0x10
 1902 0613 32020000 		.4byte	.LASF56
 1903 0617 01       		.byte	0x1
 1904 0618 0604     		.2byte	0x406
 1905 061a 6B000000 		.4byte	0x6b
 1906 061e 33060000 		.4byte	.LLST45
 1907 0622 10       		.uleb128 0x10
 1908 0623 2F010000 		.4byte	.LASF57
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 59


 1909 0627 01       		.byte	0x1
 1910 0628 0704     		.2byte	0x407
 1911 062a 83000000 		.4byte	0x83
 1912 062e 7B060000 		.4byte	.LLST46
 1913 0632 10       		.uleb128 0x10
 1914 0633 59010000 		.4byte	.LASF58
 1915 0637 01       		.byte	0x1
 1916 0638 0804     		.2byte	0x408
 1917 063a 9B000000 		.4byte	0x9b
 1918 063e C6060000 		.4byte	.LLST47
 1919 0642 10       		.uleb128 0x10
 1920 0643 FE010000 		.4byte	.LASF50
 1921 0647 01       		.byte	0x1
 1922 0648 0904     		.2byte	0x409
 1923 064a 72050000 		.4byte	0x572
 1924 064e 2E070000 		.4byte	.LLST48
 1925 0652 00       		.byte	0
 1926 0653 16       		.uleb128 0x16
 1927 0654 6B000000 		.4byte	0x6b
 1928 0658 63060000 		.4byte	0x663
 1929 065c 17       		.uleb128 0x17
 1930 065d C3000000 		.4byte	0xc3
 1931 0661 02       		.byte	0x2
 1932 0662 00       		.byte	0
 1933 0663 12       		.uleb128 0x12
 1934 0664 32050000 		.4byte	.LASF59
 1935 0668 01       		.byte	0x1
 1936 0669 C304     		.2byte	0x4c3
 1937 066b 77000000 		.4byte	0x77
 1938 066f 00000000 		.4byte	.LFB13
 1939 0673 48000000 		.4byte	.LFE13-.LFB13
 1940 0677 01       		.uleb128 0x1
 1941 0678 9C       		.byte	0x9c
 1942 0679 05070000 		.4byte	0x705
 1943 067d 11       		.uleb128 0x11
 1944 067e 4F040000 		.4byte	.LASF23
 1945 0682 01       		.byte	0x1
 1946 0683 C304     		.2byte	0x4c3
 1947 0685 6B000000 		.4byte	0x6b
 1948 0689 57070000 		.4byte	.LLST49
 1949 068d 10       		.uleb128 0x10
 1950 068e EE010000 		.4byte	.LASF48
 1951 0692 01       		.byte	0x1
 1952 0693 D604     		.2byte	0x4d6
 1953 0695 6B000000 		.4byte	0x6b
 1954 0699 78070000 		.4byte	.LLST50
 1955 069d 10       		.uleb128 0x10
 1956 069e 32020000 		.4byte	.LASF56
 1957 06a2 01       		.byte	0x1
 1958 06a3 D704     		.2byte	0x4d7
 1959 06a5 77000000 		.4byte	0x77
 1960 06a9 96070000 		.4byte	.LLST51
 1961 06ad 10       		.uleb128 0x10
 1962 06ae 61050000 		.4byte	.LASF46
 1963 06b2 01       		.byte	0x1
 1964 06b3 D804     		.2byte	0x4d8
 1965 06b5 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 60


 1966 06b9 B4070000 		.4byte	.LLST52
 1967 06bd 10       		.uleb128 0x10
 1968 06be 00000000 		.4byte	.LASF47
 1969 06c2 01       		.byte	0x1
 1970 06c3 D904     		.2byte	0x4d9
 1971 06c5 6B000000 		.4byte	0x6b
 1972 06c9 C7070000 		.4byte	.LLST53
 1973 06cd 09       		.uleb128 0x9
 1974 06ce 1C000000 		.4byte	.LVL147
 1975 06d2 ED040000 		.4byte	0x4ed
 1976 06d6 E7060000 		.4byte	0x6e7
 1977 06da 0A       		.uleb128 0xa
 1978 06db 01       		.uleb128 0x1
 1979 06dc 50       		.byte	0x50
 1980 06dd 02       		.uleb128 0x2
 1981 06de 75       		.byte	0x75
 1982 06df 00       		.sleb128 0
 1983 06e0 0A       		.uleb128 0xa
 1984 06e1 01       		.uleb128 0x1
 1985 06e2 51       		.byte	0x51
 1986 06e3 02       		.uleb128 0x2
 1987 06e4 76       		.byte	0x76
 1988 06e5 00       		.sleb128 0
 1989 06e6 00       		.byte	0
 1990 06e7 0C       		.uleb128 0xc
 1991 06e8 34000000 		.4byte	.LVL148
 1992 06ec 78050000 		.4byte	0x578
 1993 06f0 0A       		.uleb128 0xa
 1994 06f1 01       		.uleb128 0x1
 1995 06f2 51       		.byte	0x51
 1996 06f3 02       		.uleb128 0x2
 1997 06f4 75       		.byte	0x75
 1998 06f5 00       		.sleb128 0
 1999 06f6 0A       		.uleb128 0xa
 2000 06f7 01       		.uleb128 0x1
 2001 06f8 52       		.byte	0x52
 2002 06f9 02       		.uleb128 0x2
 2003 06fa 76       		.byte	0x76
 2004 06fb 00       		.sleb128 0
 2005 06fc 0A       		.uleb128 0xa
 2006 06fd 01       		.uleb128 0x1
 2007 06fe 53       		.byte	0x53
 2008 06ff 03       		.uleb128 0x3
 2009 0700 0A       		.byte	0xa
 2010 0701 0019     		.2byte	0x1900
 2011 0703 00       		.byte	0
 2012 0704 00       		.byte	0
 2013 0705 16       		.uleb128 0x16
 2014 0706 77000000 		.4byte	0x77
 2015 070a 15070000 		.4byte	0x715
 2016 070e 17       		.uleb128 0x17
 2017 070f C3000000 		.4byte	0xc3
 2018 0713 06       		.byte	0x6
 2019 0714 00       		.byte	0
 2020 0715 18       		.uleb128 0x18
 2021 0716 A3050000 		.4byte	.LASF60
 2022 071a 03       		.byte	0x3
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 61


 2023 071b BF02     		.2byte	0x2bf
 2024 071d 05070000 		.4byte	0x705
 2025 0721 16       		.uleb128 0x16
 2026 0722 6B000000 		.4byte	0x6b
 2027 0726 31070000 		.4byte	0x731
 2028 072a 17       		.uleb128 0x17
 2029 072b C3000000 		.4byte	0xc3
 2030 072f 00       		.byte	0
 2031 0730 00       		.byte	0
 2032 0731 18       		.uleb128 0x18
 2033 0732 98020000 		.4byte	.LASF61
 2034 0736 04       		.byte	0x4
 2035 0737 0501     		.2byte	0x105
 2036 0739 21070000 		.4byte	0x721
 2037 073d 16       		.uleb128 0x16
 2038 073e 4D070000 		.4byte	0x74d
 2039 0742 4D070000 		.4byte	0x74d
 2040 0746 17       		.uleb128 0x17
 2041 0747 C3000000 		.4byte	0xc3
 2042 074b 06       		.byte	0x6
 2043 074c 00       		.byte	0
 2044 074d 19       		.uleb128 0x19
 2045 074e 6B000000 		.4byte	0x6b
 2046 0752 18       		.uleb128 0x18
 2047 0753 C6010000 		.4byte	.LASF62
 2048 0757 04       		.byte	0x4
 2049 0758 0601     		.2byte	0x106
 2050 075a 5E070000 		.4byte	0x75e
 2051 075e 19       		.uleb128 0x19
 2052 075f 3D070000 		.4byte	0x73d
 2053 0763 1A       		.uleb128 0x1a
 2054 0764 1A050000 		.4byte	.LASF63
 2055 0768 01       		.byte	0x1
 2056 0769 29       		.byte	0x29
 2057 076a 05070000 		.4byte	0x705
 2058 076e 05       		.uleb128 0x5
 2059 076f 03       		.byte	0x3
 2060 0770 00000000 		.4byte	CapSense_sensorBaseline
 2061 0774 16       		.uleb128 0x16
 2062 0775 6B000000 		.4byte	0x6b
 2063 0779 84070000 		.4byte	0x784
 2064 077d 17       		.uleb128 0x17
 2065 077e C3000000 		.4byte	0xc3
 2066 0782 06       		.byte	0x6
 2067 0783 00       		.byte	0
 2068 0784 1A       		.uleb128 0x1a
 2069 0785 4D020000 		.4byte	.LASF64
 2070 0789 01       		.byte	0x1
 2071 078a 2A       		.byte	0x2a
 2072 078b 74070000 		.4byte	0x774
 2073 078f 05       		.uleb128 0x5
 2074 0790 03       		.byte	0x3
 2075 0791 00000000 		.4byte	CapSense_sensorBaselineLow
 2076 0795 1A       		.uleb128 0x1a
 2077 0796 76000000 		.4byte	.LASF65
 2078 079a 01       		.byte	0x1
 2079 079b 2B       		.byte	0x2b
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 62


 2080 079c 74070000 		.4byte	0x774
 2081 07a0 05       		.uleb128 0x5
 2082 07a1 03       		.byte	0x3
 2083 07a2 00000000 		.4byte	CapSense_sensorSignal
 2084 07a6 1A       		.uleb128 0x1a
 2085 07a7 31000000 		.4byte	.LASF66
 2086 07ab 01       		.byte	0x1
 2087 07ac 2C       		.byte	0x2c
 2088 07ad 21070000 		.4byte	0x721
 2089 07b1 05       		.uleb128 0x5
 2090 07b2 03       		.byte	0x3
 2091 07b3 00000000 		.4byte	CapSense_sensorOnMask
 2092 07b7 1A       		.uleb128 0x1a
 2093 07b8 07030000 		.4byte	.LASF67
 2094 07bc 01       		.byte	0x1
 2095 07bd 2E       		.byte	0x2e
 2096 07be 74070000 		.4byte	0x774
 2097 07c2 05       		.uleb128 0x5
 2098 07c3 03       		.byte	0x3
 2099 07c4 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2100 07c8 1A       		.uleb128 0x1a
 2101 07c9 B6030000 		.4byte	.LASF68
 2102 07cd 01       		.byte	0x1
 2103 07ce 30       		.byte	0x30
 2104 07cf 53060000 		.4byte	0x653
 2105 07d3 05       		.uleb128 0x5
 2106 07d4 03       		.byte	0x3
 2107 07d5 00000000 		.4byte	CapSense_fingerThreshold
 2108 07d9 1A       		.uleb128 0x1a
 2109 07da 9E030000 		.4byte	.LASF69
 2110 07de 01       		.byte	0x1
 2111 07df 34       		.byte	0x34
 2112 07e0 53060000 		.4byte	0x653
 2113 07e4 05       		.uleb128 0x5
 2114 07e5 03       		.byte	0x3
 2115 07e6 00000000 		.4byte	CapSense_noiseThreshold
 2116 07ea 1A       		.uleb128 0x1a
 2117 07eb 1D000000 		.4byte	.LASF70
 2118 07ef 01       		.byte	0x1
 2119 07f0 38       		.byte	0x38
 2120 07f1 53060000 		.4byte	0x653
 2121 07f5 05       		.uleb128 0x5
 2122 07f6 03       		.byte	0x3
 2123 07f7 00000000 		.4byte	CapSense_hysteresis
 2124 07fb 1A       		.uleb128 0x1a
 2125 07fc 08050000 		.4byte	.LASF71
 2126 0800 01       		.byte	0x1
 2127 0801 3C       		.byte	0x3c
 2128 0802 53060000 		.4byte	0x653
 2129 0806 05       		.uleb128 0x5
 2130 0807 03       		.byte	0x3
 2131 0808 00000000 		.4byte	CapSense_debounce
 2132 080c 1A       		.uleb128 0x1a
 2133 080d E8050000 		.4byte	.LASF72
 2134 0811 01       		.byte	0x1
 2135 0812 40       		.byte	0x40
 2136 0813 53060000 		.4byte	0x653
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 63


 2137 0817 05       		.uleb128 0x5
 2138 0818 03       		.byte	0x3
 2139 0819 00000000 		.4byte	CapSense_debounceCounter
 2140 081d 16       		.uleb128 0x16
 2141 081e 4D070000 		.4byte	0x74d
 2142 0822 2D080000 		.4byte	0x82d
 2143 0826 17       		.uleb128 0x17
 2144 0827 C3000000 		.4byte	0xc3
 2145 082b 02       		.byte	0x2
 2146 082c 00       		.byte	0
 2147 082d 1A       		.uleb128 0x1a
 2148 082e 68020000 		.4byte	.LASF73
 2149 0832 01       		.byte	0x1
 2150 0833 44       		.byte	0x44
 2151 0834 3E080000 		.4byte	0x83e
 2152 0838 05       		.uleb128 0x5
 2153 0839 03       		.byte	0x3
 2154 083a 00000000 		.4byte	CapSense_rawDataIndex
 2155 083e 19       		.uleb128 0x19
 2156 083f 1D080000 		.4byte	0x81d
 2157 0843 1A       		.uleb128 0x1a
 2158 0844 19060000 		.4byte	.LASF74
 2159 0848 01       		.byte	0x1
 2160 0849 4B       		.byte	0x4b
 2161 084a 54080000 		.4byte	0x854
 2162 084e 05       		.uleb128 0x5
 2163 084f 03       		.byte	0x3
 2164 0850 00000000 		.4byte	CapSense_numberOfSensors
 2165 0854 19       		.uleb128 0x19
 2166 0855 1D080000 		.4byte	0x81d
 2167 0859 16       		.uleb128 0x16
 2168 085a 69080000 		.4byte	0x869
 2169 085e 69080000 		.4byte	0x869
 2170 0862 17       		.uleb128 0x17
 2171 0863 C3000000 		.4byte	0xc3
 2172 0867 00       		.byte	0
 2173 0868 00       		.byte	0
 2174 0869 19       		.uleb128 0x19
 2175 086a 77000000 		.4byte	0x77
 2176 086e 1A       		.uleb128 0x1a
 2177 086f CF030000 		.4byte	.LASF75
 2178 0873 01       		.byte	0x1
 2179 0874 52       		.byte	0x52
 2180 0875 7F080000 		.4byte	0x87f
 2181 0879 05       		.uleb128 0x5
 2182 087a 03       		.byte	0x3
 2183 087b 00000000 		.4byte	CapSense_centroidMult
 2184 087f 19       		.uleb128 0x19
 2185 0880 59080000 		.4byte	0x859
 2186 0884 1B       		.uleb128 0x1b
 2187 0885 11020000 		.4byte	.LASF76
 2188 0889 11020000 		.4byte	.LASF76
 2189 088d 03       		.byte	0x3
 2190 088e 9A       		.byte	0x9a
 2191 088f 1B       		.uleb128 0x1b
 2192 0890 09060000 		.4byte	.LASF77
 2193 0894 09060000 		.4byte	.LASF77
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 64


 2194 0898 03       		.byte	0x3
 2195 0899 99       		.byte	0x99
 2196 089a 1B       		.uleb128 0x1b
 2197 089b CC050000 		.4byte	.LASF78
 2198 089f CC050000 		.4byte	.LASF78
 2199 08a3 03       		.byte	0x3
 2200 08a4 9B       		.byte	0x9b
 2201 08a5 1B       		.uleb128 0x1b
 2202 08a6 EA020000 		.4byte	.LASF79
 2203 08aa EA020000 		.4byte	.LASF79
 2204 08ae 04       		.byte	0x4
 2205 08af C2       		.byte	0xc2
 2206 08b0 00       		.byte	0
 2207              		.section	.debug_abbrev,"",%progbits
 2208              	.Ldebug_abbrev0:
 2209 0000 01       		.uleb128 0x1
 2210 0001 11       		.uleb128 0x11
 2211 0002 01       		.byte	0x1
 2212 0003 25       		.uleb128 0x25
 2213 0004 0E       		.uleb128 0xe
 2214 0005 13       		.uleb128 0x13
 2215 0006 0B       		.uleb128 0xb
 2216 0007 03       		.uleb128 0x3
 2217 0008 0E       		.uleb128 0xe
 2218 0009 1B       		.uleb128 0x1b
 2219 000a 0E       		.uleb128 0xe
 2220 000b 55       		.uleb128 0x55
 2221 000c 17       		.uleb128 0x17
 2222 000d 11       		.uleb128 0x11
 2223 000e 01       		.uleb128 0x1
 2224 000f 10       		.uleb128 0x10
 2225 0010 17       		.uleb128 0x17
 2226 0011 00       		.byte	0
 2227 0012 00       		.byte	0
 2228 0013 02       		.uleb128 0x2
 2229 0014 24       		.uleb128 0x24
 2230 0015 00       		.byte	0
 2231 0016 0B       		.uleb128 0xb
 2232 0017 0B       		.uleb128 0xb
 2233 0018 3E       		.uleb128 0x3e
 2234 0019 0B       		.uleb128 0xb
 2235 001a 03       		.uleb128 0x3
 2236 001b 0E       		.uleb128 0xe
 2237 001c 00       		.byte	0
 2238 001d 00       		.byte	0
 2239 001e 03       		.uleb128 0x3
 2240 001f 24       		.uleb128 0x24
 2241 0020 00       		.byte	0
 2242 0021 0B       		.uleb128 0xb
 2243 0022 0B       		.uleb128 0xb
 2244 0023 3E       		.uleb128 0x3e
 2245 0024 0B       		.uleb128 0xb
 2246 0025 03       		.uleb128 0x3
 2247 0026 08       		.uleb128 0x8
 2248 0027 00       		.byte	0
 2249 0028 00       		.byte	0
 2250 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 65


 2251 002a 16       		.uleb128 0x16
 2252 002b 00       		.byte	0
 2253 002c 03       		.uleb128 0x3
 2254 002d 0E       		.uleb128 0xe
 2255 002e 3A       		.uleb128 0x3a
 2256 002f 0B       		.uleb128 0xb
 2257 0030 3B       		.uleb128 0x3b
 2258 0031 05       		.uleb128 0x5
 2259 0032 49       		.uleb128 0x49
 2260 0033 13       		.uleb128 0x13
 2261 0034 00       		.byte	0
 2262 0035 00       		.byte	0
 2263 0036 05       		.uleb128 0x5
 2264 0037 2E       		.uleb128 0x2e
 2265 0038 01       		.byte	0x1
 2266 0039 3F       		.uleb128 0x3f
 2267 003a 19       		.uleb128 0x19
 2268 003b 03       		.uleb128 0x3
 2269 003c 0E       		.uleb128 0xe
 2270 003d 3A       		.uleb128 0x3a
 2271 003e 0B       		.uleb128 0xb
 2272 003f 3B       		.uleb128 0x3b
 2273 0040 0B       		.uleb128 0xb
 2274 0041 27       		.uleb128 0x27
 2275 0042 19       		.uleb128 0x19
 2276 0043 11       		.uleb128 0x11
 2277 0044 01       		.uleb128 0x1
 2278 0045 12       		.uleb128 0x12
 2279 0046 06       		.uleb128 0x6
 2280 0047 40       		.uleb128 0x40
 2281 0048 18       		.uleb128 0x18
 2282 0049 9742     		.uleb128 0x2117
 2283 004b 19       		.uleb128 0x19
 2284 004c 01       		.uleb128 0x1
 2285 004d 13       		.uleb128 0x13
 2286 004e 00       		.byte	0
 2287 004f 00       		.byte	0
 2288 0050 06       		.uleb128 0x6
 2289 0051 05       		.uleb128 0x5
 2290 0052 00       		.byte	0
 2291 0053 03       		.uleb128 0x3
 2292 0054 0E       		.uleb128 0xe
 2293 0055 3A       		.uleb128 0x3a
 2294 0056 0B       		.uleb128 0xb
 2295 0057 3B       		.uleb128 0x3b
 2296 0058 0B       		.uleb128 0xb
 2297 0059 49       		.uleb128 0x49
 2298 005a 13       		.uleb128 0x13
 2299 005b 02       		.uleb128 0x2
 2300 005c 18       		.uleb128 0x18
 2301 005d 00       		.byte	0
 2302 005e 00       		.byte	0
 2303 005f 07       		.uleb128 0x7
 2304 0060 34       		.uleb128 0x34
 2305 0061 00       		.byte	0
 2306 0062 03       		.uleb128 0x3
 2307 0063 0E       		.uleb128 0xe
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 66


 2308 0064 3A       		.uleb128 0x3a
 2309 0065 0B       		.uleb128 0xb
 2310 0066 3B       		.uleb128 0x3b
 2311 0067 0B       		.uleb128 0xb
 2312 0068 49       		.uleb128 0x49
 2313 0069 13       		.uleb128 0x13
 2314 006a 02       		.uleb128 0x2
 2315 006b 17       		.uleb128 0x17
 2316 006c 00       		.byte	0
 2317 006d 00       		.byte	0
 2318 006e 08       		.uleb128 0x8
 2319 006f 05       		.uleb128 0x5
 2320 0070 00       		.byte	0
 2321 0071 03       		.uleb128 0x3
 2322 0072 0E       		.uleb128 0xe
 2323 0073 3A       		.uleb128 0x3a
 2324 0074 0B       		.uleb128 0xb
 2325 0075 3B       		.uleb128 0x3b
 2326 0076 0B       		.uleb128 0xb
 2327 0077 49       		.uleb128 0x49
 2328 0078 13       		.uleb128 0x13
 2329 0079 02       		.uleb128 0x2
 2330 007a 17       		.uleb128 0x17
 2331 007b 00       		.byte	0
 2332 007c 00       		.byte	0
 2333 007d 09       		.uleb128 0x9
 2334 007e 898201   		.uleb128 0x4109
 2335 0081 01       		.byte	0x1
 2336 0082 11       		.uleb128 0x11
 2337 0083 01       		.uleb128 0x1
 2338 0084 31       		.uleb128 0x31
 2339 0085 13       		.uleb128 0x13
 2340 0086 01       		.uleb128 0x1
 2341 0087 13       		.uleb128 0x13
 2342 0088 00       		.byte	0
 2343 0089 00       		.byte	0
 2344 008a 0A       		.uleb128 0xa
 2345 008b 8A8201   		.uleb128 0x410a
 2346 008e 00       		.byte	0
 2347 008f 02       		.uleb128 0x2
 2348 0090 18       		.uleb128 0x18
 2349 0091 9142     		.uleb128 0x2111
 2350 0093 18       		.uleb128 0x18
 2351 0094 00       		.byte	0
 2352 0095 00       		.byte	0
 2353 0096 0B       		.uleb128 0xb
 2354 0097 898201   		.uleb128 0x4109
 2355 009a 00       		.byte	0
 2356 009b 11       		.uleb128 0x11
 2357 009c 01       		.uleb128 0x1
 2358 009d 31       		.uleb128 0x31
 2359 009e 13       		.uleb128 0x13
 2360 009f 00       		.byte	0
 2361 00a0 00       		.byte	0
 2362 00a1 0C       		.uleb128 0xc
 2363 00a2 898201   		.uleb128 0x4109
 2364 00a5 01       		.byte	0x1
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 67


 2365 00a6 11       		.uleb128 0x11
 2366 00a7 01       		.uleb128 0x1
 2367 00a8 31       		.uleb128 0x31
 2368 00a9 13       		.uleb128 0x13
 2369 00aa 00       		.byte	0
 2370 00ab 00       		.byte	0
 2371 00ac 0D       		.uleb128 0xd
 2372 00ad 2E       		.uleb128 0x2e
 2373 00ae 01       		.byte	0x1
 2374 00af 3F       		.uleb128 0x3f
 2375 00b0 19       		.uleb128 0x19
 2376 00b1 03       		.uleb128 0x3
 2377 00b2 0E       		.uleb128 0xe
 2378 00b3 3A       		.uleb128 0x3a
 2379 00b4 0B       		.uleb128 0xb
 2380 00b5 3B       		.uleb128 0x3b
 2381 00b6 05       		.uleb128 0x5
 2382 00b7 27       		.uleb128 0x27
 2383 00b8 19       		.uleb128 0x19
 2384 00b9 11       		.uleb128 0x11
 2385 00ba 01       		.uleb128 0x1
 2386 00bb 12       		.uleb128 0x12
 2387 00bc 06       		.uleb128 0x6
 2388 00bd 40       		.uleb128 0x40
 2389 00be 18       		.uleb128 0x18
 2390 00bf 9742     		.uleb128 0x2117
 2391 00c1 19       		.uleb128 0x19
 2392 00c2 01       		.uleb128 0x1
 2393 00c3 13       		.uleb128 0x13
 2394 00c4 00       		.byte	0
 2395 00c5 00       		.byte	0
 2396 00c6 0E       		.uleb128 0xe
 2397 00c7 34       		.uleb128 0x34
 2398 00c8 00       		.byte	0
 2399 00c9 03       		.uleb128 0x3
 2400 00ca 08       		.uleb128 0x8
 2401 00cb 3A       		.uleb128 0x3a
 2402 00cc 0B       		.uleb128 0xb
 2403 00cd 3B       		.uleb128 0x3b
 2404 00ce 05       		.uleb128 0x5
 2405 00cf 49       		.uleb128 0x49
 2406 00d0 13       		.uleb128 0x13
 2407 00d1 02       		.uleb128 0x2
 2408 00d2 17       		.uleb128 0x17
 2409 00d3 00       		.byte	0
 2410 00d4 00       		.byte	0
 2411 00d5 0F       		.uleb128 0xf
 2412 00d6 34       		.uleb128 0x34
 2413 00d7 00       		.byte	0
 2414 00d8 03       		.uleb128 0x3
 2415 00d9 08       		.uleb128 0x8
 2416 00da 3A       		.uleb128 0x3a
 2417 00db 0B       		.uleb128 0xb
 2418 00dc 3B       		.uleb128 0x3b
 2419 00dd 05       		.uleb128 0x5
 2420 00de 49       		.uleb128 0x49
 2421 00df 13       		.uleb128 0x13
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 68


 2422 00e0 02       		.uleb128 0x2
 2423 00e1 18       		.uleb128 0x18
 2424 00e2 00       		.byte	0
 2425 00e3 00       		.byte	0
 2426 00e4 10       		.uleb128 0x10
 2427 00e5 34       		.uleb128 0x34
 2428 00e6 00       		.byte	0
 2429 00e7 03       		.uleb128 0x3
 2430 00e8 0E       		.uleb128 0xe
 2431 00e9 3A       		.uleb128 0x3a
 2432 00ea 0B       		.uleb128 0xb
 2433 00eb 3B       		.uleb128 0x3b
 2434 00ec 05       		.uleb128 0x5
 2435 00ed 49       		.uleb128 0x49
 2436 00ee 13       		.uleb128 0x13
 2437 00ef 02       		.uleb128 0x2
 2438 00f0 17       		.uleb128 0x17
 2439 00f1 00       		.byte	0
 2440 00f2 00       		.byte	0
 2441 00f3 11       		.uleb128 0x11
 2442 00f4 05       		.uleb128 0x5
 2443 00f5 00       		.byte	0
 2444 00f6 03       		.uleb128 0x3
 2445 00f7 0E       		.uleb128 0xe
 2446 00f8 3A       		.uleb128 0x3a
 2447 00f9 0B       		.uleb128 0xb
 2448 00fa 3B       		.uleb128 0x3b
 2449 00fb 05       		.uleb128 0x5
 2450 00fc 49       		.uleb128 0x49
 2451 00fd 13       		.uleb128 0x13
 2452 00fe 02       		.uleb128 0x2
 2453 00ff 17       		.uleb128 0x17
 2454 0100 00       		.byte	0
 2455 0101 00       		.byte	0
 2456 0102 12       		.uleb128 0x12
 2457 0103 2E       		.uleb128 0x2e
 2458 0104 01       		.byte	0x1
 2459 0105 3F       		.uleb128 0x3f
 2460 0106 19       		.uleb128 0x19
 2461 0107 03       		.uleb128 0x3
 2462 0108 0E       		.uleb128 0xe
 2463 0109 3A       		.uleb128 0x3a
 2464 010a 0B       		.uleb128 0xb
 2465 010b 3B       		.uleb128 0x3b
 2466 010c 05       		.uleb128 0x5
 2467 010d 27       		.uleb128 0x27
 2468 010e 19       		.uleb128 0x19
 2469 010f 49       		.uleb128 0x49
 2470 0110 13       		.uleb128 0x13
 2471 0111 11       		.uleb128 0x11
 2472 0112 01       		.uleb128 0x1
 2473 0113 12       		.uleb128 0x12
 2474 0114 06       		.uleb128 0x6
 2475 0115 40       		.uleb128 0x40
 2476 0116 18       		.uleb128 0x18
 2477 0117 9742     		.uleb128 0x2117
 2478 0119 19       		.uleb128 0x19
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 69


 2479 011a 01       		.uleb128 0x1
 2480 011b 13       		.uleb128 0x13
 2481 011c 00       		.byte	0
 2482 011d 00       		.byte	0
 2483 011e 13       		.uleb128 0x13
 2484 011f 34       		.uleb128 0x34
 2485 0120 00       		.byte	0
 2486 0121 03       		.uleb128 0x3
 2487 0122 0E       		.uleb128 0xe
 2488 0123 3A       		.uleb128 0x3a
 2489 0124 0B       		.uleb128 0xb
 2490 0125 3B       		.uleb128 0x3b
 2491 0126 05       		.uleb128 0x5
 2492 0127 49       		.uleb128 0x49
 2493 0128 13       		.uleb128 0x13
 2494 0129 02       		.uleb128 0x2
 2495 012a 18       		.uleb128 0x18
 2496 012b 00       		.byte	0
 2497 012c 00       		.byte	0
 2498 012d 14       		.uleb128 0x14
 2499 012e 05       		.uleb128 0x5
 2500 012f 00       		.byte	0
 2501 0130 03       		.uleb128 0x3
 2502 0131 0E       		.uleb128 0xe
 2503 0132 3A       		.uleb128 0x3a
 2504 0133 0B       		.uleb128 0xb
 2505 0134 3B       		.uleb128 0x3b
 2506 0135 05       		.uleb128 0x5
 2507 0136 49       		.uleb128 0x49
 2508 0137 13       		.uleb128 0x13
 2509 0138 02       		.uleb128 0x2
 2510 0139 18       		.uleb128 0x18
 2511 013a 00       		.byte	0
 2512 013b 00       		.byte	0
 2513 013c 15       		.uleb128 0x15
 2514 013d 0F       		.uleb128 0xf
 2515 013e 00       		.byte	0
 2516 013f 0B       		.uleb128 0xb
 2517 0140 0B       		.uleb128 0xb
 2518 0141 49       		.uleb128 0x49
 2519 0142 13       		.uleb128 0x13
 2520 0143 00       		.byte	0
 2521 0144 00       		.byte	0
 2522 0145 16       		.uleb128 0x16
 2523 0146 01       		.uleb128 0x1
 2524 0147 01       		.byte	0x1
 2525 0148 49       		.uleb128 0x49
 2526 0149 13       		.uleb128 0x13
 2527 014a 01       		.uleb128 0x1
 2528 014b 13       		.uleb128 0x13
 2529 014c 00       		.byte	0
 2530 014d 00       		.byte	0
 2531 014e 17       		.uleb128 0x17
 2532 014f 21       		.uleb128 0x21
 2533 0150 00       		.byte	0
 2534 0151 49       		.uleb128 0x49
 2535 0152 13       		.uleb128 0x13
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 70


 2536 0153 2F       		.uleb128 0x2f
 2537 0154 0B       		.uleb128 0xb
 2538 0155 00       		.byte	0
 2539 0156 00       		.byte	0
 2540 0157 18       		.uleb128 0x18
 2541 0158 34       		.uleb128 0x34
 2542 0159 00       		.byte	0
 2543 015a 03       		.uleb128 0x3
 2544 015b 0E       		.uleb128 0xe
 2545 015c 3A       		.uleb128 0x3a
 2546 015d 0B       		.uleb128 0xb
 2547 015e 3B       		.uleb128 0x3b
 2548 015f 05       		.uleb128 0x5
 2549 0160 49       		.uleb128 0x49
 2550 0161 13       		.uleb128 0x13
 2551 0162 3F       		.uleb128 0x3f
 2552 0163 19       		.uleb128 0x19
 2553 0164 3C       		.uleb128 0x3c
 2554 0165 19       		.uleb128 0x19
 2555 0166 00       		.byte	0
 2556 0167 00       		.byte	0
 2557 0168 19       		.uleb128 0x19
 2558 0169 26       		.uleb128 0x26
 2559 016a 00       		.byte	0
 2560 016b 49       		.uleb128 0x49
 2561 016c 13       		.uleb128 0x13
 2562 016d 00       		.byte	0
 2563 016e 00       		.byte	0
 2564 016f 1A       		.uleb128 0x1a
 2565 0170 34       		.uleb128 0x34
 2566 0171 00       		.byte	0
 2567 0172 03       		.uleb128 0x3
 2568 0173 0E       		.uleb128 0xe
 2569 0174 3A       		.uleb128 0x3a
 2570 0175 0B       		.uleb128 0xb
 2571 0176 3B       		.uleb128 0x3b
 2572 0177 0B       		.uleb128 0xb
 2573 0178 49       		.uleb128 0x49
 2574 0179 13       		.uleb128 0x13
 2575 017a 3F       		.uleb128 0x3f
 2576 017b 19       		.uleb128 0x19
 2577 017c 02       		.uleb128 0x2
 2578 017d 18       		.uleb128 0x18
 2579 017e 00       		.byte	0
 2580 017f 00       		.byte	0
 2581 0180 1B       		.uleb128 0x1b
 2582 0181 2E       		.uleb128 0x2e
 2583 0182 00       		.byte	0
 2584 0183 3F       		.uleb128 0x3f
 2585 0184 19       		.uleb128 0x19
 2586 0185 3C       		.uleb128 0x3c
 2587 0186 19       		.uleb128 0x19
 2588 0187 6E       		.uleb128 0x6e
 2589 0188 0E       		.uleb128 0xe
 2590 0189 03       		.uleb128 0x3
 2591 018a 0E       		.uleb128 0xe
 2592 018b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 71


 2593 018c 0B       		.uleb128 0xb
 2594 018d 3B       		.uleb128 0x3b
 2595 018e 0B       		.uleb128 0xb
 2596 018f 00       		.byte	0
 2597 0190 00       		.byte	0
 2598 0191 00       		.byte	0
 2599              		.section	.debug_loc,"",%progbits
 2600              	.Ldebug_loc0:
 2601              	.LLST0:
 2602 0000 04000000 		.4byte	.LVL1
 2603 0004 24000000 		.4byte	.LVL2
 2604 0008 0100     		.2byte	0x1
 2605 000a 53       		.byte	0x53
 2606 000b 24000000 		.4byte	.LVL2
 2607 000f 26000000 		.4byte	.LVL3
 2608 0013 0300     		.2byte	0x3
 2609 0015 72       		.byte	0x72
 2610 0016 01       		.sleb128 1
 2611 0017 9F       		.byte	0x9f
 2612 0018 00000000 		.4byte	0
 2613 001c 00000000 		.4byte	0
 2614              	.LLST1:
 2615 0020 00000000 		.4byte	.LVL4
 2616 0024 07000000 		.4byte	.LVL5-1
 2617 0028 0100     		.2byte	0x1
 2618 002a 50       		.byte	0x50
 2619 002b 07000000 		.4byte	.LVL5-1
 2620 002f 18000000 		.4byte	.LFE1
 2621 0033 0400     		.2byte	0x4
 2622 0035 F3       		.byte	0xf3
 2623 0036 01       		.uleb128 0x1
 2624 0037 50       		.byte	0x50
 2625 0038 9F       		.byte	0x9f
 2626 0039 00000000 		.4byte	0
 2627 003d 00000000 		.4byte	0
 2628              	.LLST2:
 2629 0041 02000000 		.4byte	.LVL8
 2630 0045 06000000 		.4byte	.LVL9
 2631 0049 0200     		.2byte	0x2
 2632 004b 30       		.byte	0x30
 2633 004c 9F       		.byte	0x9f
 2634 004d 06000000 		.4byte	.LVL9
 2635 0051 0E000000 		.4byte	.LVL11
 2636 0055 0100     		.2byte	0x1
 2637 0057 54       		.byte	0x54
 2638 0058 10000000 		.4byte	.LVL12
 2639 005c 16000000 		.4byte	.LFE2
 2640 0060 0100     		.2byte	0x1
 2641 0062 54       		.byte	0x54
 2642 0063 00000000 		.4byte	0
 2643 0067 00000000 		.4byte	0
 2644              	.LLST3:
 2645 006b 12000000 		.4byte	.LVL15
 2646 006f 34000000 		.4byte	.LVL19
 2647 0073 0100     		.2byte	0x1
 2648 0075 54       		.byte	0x54
 2649 0076 36000000 		.4byte	.LVL20
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 72


 2650 007a 3C000000 		.4byte	.LVL21
 2651 007e 0100     		.2byte	0x1
 2652 0080 54       		.byte	0x54
 2653 0081 00000000 		.4byte	0
 2654 0085 00000000 		.4byte	0
 2655              	.LLST4:
 2656 0089 1C000000 		.4byte	.LVL16
 2657 008d 28000000 		.4byte	.LVL17
 2658 0091 0100     		.2byte	0x1
 2659 0093 53       		.byte	0x53
 2660 0094 28000000 		.4byte	.LVL17
 2661 0098 34000000 		.4byte	.LVL19
 2662 009c 0700     		.2byte	0x7
 2663 009e 31       		.byte	0x31
 2664 009f 74       		.byte	0x74
 2665 00a0 00       		.sleb128 0
 2666 00a1 37       		.byte	0x37
 2667 00a2 1A       		.byte	0x1a
 2668 00a3 24       		.byte	0x24
 2669 00a4 9F       		.byte	0x9f
 2670 00a5 34000000 		.4byte	.LVL19
 2671 00a9 36000000 		.4byte	.LVL20
 2672 00ad 0700     		.2byte	0x7
 2673 00af 31       		.byte	0x31
 2674 00b0 74       		.byte	0x74
 2675 00b1 7F       		.sleb128 -1
 2676 00b2 37       		.byte	0x37
 2677 00b3 1A       		.byte	0x1a
 2678 00b4 24       		.byte	0x24
 2679 00b5 9F       		.byte	0x9f
 2680 00b6 00000000 		.4byte	0
 2681 00ba 00000000 		.4byte	0
 2682              	.LLST5:
 2683 00be 00000000 		.4byte	.LVL22
 2684 00c2 19000000 		.4byte	.LVL28-1
 2685 00c6 0100     		.2byte	0x1
 2686 00c8 50       		.byte	0x50
 2687 00c9 19000000 		.4byte	.LVL28-1
 2688 00cd C8000000 		.4byte	.LFE4
 2689 00d1 0400     		.2byte	0x4
 2690 00d3 F3       		.byte	0xf3
 2691 00d4 01       		.uleb128 0x1
 2692 00d5 50       		.byte	0x50
 2693 00d6 9F       		.byte	0x9f
 2694 00d7 00000000 		.4byte	0
 2695 00db 00000000 		.4byte	0
 2696              	.LLST6:
 2697 00df 66000000 		.4byte	.LVL34
 2698 00e3 6E000000 		.4byte	.LVL35
 2699 00e7 0500     		.2byte	0x5
 2700 00e9 72       		.byte	0x72
 2701 00ea 00       		.sleb128 0
 2702 00eb 38       		.byte	0x38
 2703 00ec 24       		.byte	0x24
 2704 00ed 9F       		.byte	0x9f
 2705 00ee 6E000000 		.4byte	.LVL35
 2706 00f2 82000000 		.4byte	.LVL38
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 73


 2707 00f6 0100     		.2byte	0x1
 2708 00f8 53       		.byte	0x53
 2709 00f9 00000000 		.4byte	0
 2710 00fd 00000000 		.4byte	0
 2711              	.LLST7:
 2712 0101 2A000000 		.4byte	.LVL29
 2713 0105 2E000000 		.4byte	.LVL30
 2714 0109 0100     		.2byte	0x1
 2715 010b 55       		.byte	0x55
 2716 010c 34000000 		.4byte	.LVL31
 2717 0110 AC000000 		.4byte	.LVL42
 2718 0114 0100     		.2byte	0x1
 2719 0116 55       		.byte	0x55
 2720 0117 00000000 		.4byte	0
 2721 011b 00000000 		.4byte	0
 2722              	.LLST8:
 2723 011f 16000000 		.4byte	.LVL27
 2724 0123 AC000000 		.4byte	.LVL42
 2725 0127 0100     		.2byte	0x1
 2726 0129 58       		.byte	0x58
 2727 012a 00000000 		.4byte	0
 2728 012e 00000000 		.4byte	0
 2729              	.LLST9:
 2730 0132 0A000000 		.4byte	.LVL23
 2731 0136 0E000000 		.4byte	.LVL24
 2732 013a 0100     		.2byte	0x1
 2733 013c 53       		.byte	0x53
 2734 013d 0E000000 		.4byte	.LVL24
 2735 0141 12000000 		.4byte	.LVL26
 2736 0145 0900     		.2byte	0x9
 2737 0147 73       		.byte	0x73
 2738 0148 00       		.sleb128 0
 2739 0149 03       		.byte	0x3
 2740 014a 00000000 		.4byte	.LANCHOR0
 2741 014e 1C       		.byte	0x1c
 2742 014f 9F       		.byte	0x9f
 2743 0150 2A000000 		.4byte	.LVL29
 2744 0154 2E000000 		.4byte	.LVL30
 2745 0158 0200     		.2byte	0x2
 2746 015a 31       		.byte	0x31
 2747 015b 9F       		.byte	0x9f
 2748 015c 34000000 		.4byte	.LVL31
 2749 0160 36000000 		.4byte	.LVL32
 2750 0164 0200     		.2byte	0x2
 2751 0166 30       		.byte	0x30
 2752 0167 9F       		.byte	0x9f
 2753 0168 36000000 		.4byte	.LVL32
 2754 016c AC000000 		.4byte	.LVL42
 2755 0170 0100     		.2byte	0x1
 2756 0172 57       		.byte	0x57
 2757 0173 00000000 		.4byte	0
 2758 0177 00000000 		.4byte	0
 2759              	.LLST10:
 2760 017b 10000000 		.4byte	.LVL25
 2761 017f 86000000 		.4byte	.LVL39
 2762 0183 0100     		.2byte	0x1
 2763 0185 56       		.byte	0x56
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 74


 2764 0186 00000000 		.4byte	0
 2765 018a 00000000 		.4byte	0
 2766              	.LLST11:
 2767 018e 02000000 		.4byte	.LVL43
 2768 0192 06000000 		.4byte	.LVL44
 2769 0196 0200     		.2byte	0x2
 2770 0198 30       		.byte	0x30
 2771 0199 9F       		.byte	0x9f
 2772 019a 06000000 		.4byte	.LVL44
 2773 019e 20000000 		.4byte	.LVL47
 2774 01a2 0100     		.2byte	0x1
 2775 01a4 54       		.byte	0x54
 2776 01a5 22000000 		.4byte	.LVL48
 2777 01a9 28000000 		.4byte	.LVL49
 2778 01ad 0100     		.2byte	0x1
 2779 01af 54       		.byte	0x54
 2780 01b0 00000000 		.4byte	0
 2781 01b4 00000000 		.4byte	0
 2782              	.LLST12:
 2783 01b8 10000000 		.4byte	.LVL45
 2784 01bc 1D000000 		.4byte	.LVL46-1
 2785 01c0 0100     		.2byte	0x1
 2786 01c2 53       		.byte	0x53
 2787 01c3 1D000000 		.4byte	.LVL46-1
 2788 01c7 20000000 		.4byte	.LVL47
 2789 01cb 0700     		.2byte	0x7
 2790 01cd 31       		.byte	0x31
 2791 01ce 74       		.byte	0x74
 2792 01cf 00       		.sleb128 0
 2793 01d0 37       		.byte	0x37
 2794 01d1 1A       		.byte	0x1a
 2795 01d2 24       		.byte	0x24
 2796 01d3 9F       		.byte	0x9f
 2797 01d4 20000000 		.4byte	.LVL47
 2798 01d8 22000000 		.4byte	.LVL48
 2799 01dc 0700     		.2byte	0x7
 2800 01de 31       		.byte	0x31
 2801 01df 74       		.byte	0x74
 2802 01e0 7F       		.sleb128 -1
 2803 01e1 37       		.byte	0x37
 2804 01e2 1A       		.byte	0x1a
 2805 01e3 24       		.byte	0x24
 2806 01e4 9F       		.byte	0x9f
 2807 01e5 00000000 		.4byte	0
 2808 01e9 00000000 		.4byte	0
 2809              	.LLST13:
 2810 01ed 00000000 		.4byte	.LVL50
 2811 01f1 3C000000 		.4byte	.LVL62
 2812 01f5 0100     		.2byte	0x1
 2813 01f7 50       		.byte	0x50
 2814 01f8 3C000000 		.4byte	.LVL62
 2815 01fc 50000000 		.4byte	.LVL64
 2816 0200 0400     		.2byte	0x4
 2817 0202 F3       		.byte	0xf3
 2818 0203 01       		.uleb128 0x1
 2819 0204 50       		.byte	0x50
 2820 0205 9F       		.byte	0x9f
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 75


 2821 0206 50000000 		.4byte	.LVL64
 2822 020a 58000000 		.4byte	.LVL65
 2823 020e 0100     		.2byte	0x1
 2824 0210 50       		.byte	0x50
 2825 0211 58000000 		.4byte	.LVL65
 2826 0215 9C000000 		.4byte	.LFE6
 2827 0219 0400     		.2byte	0x4
 2828 021b F3       		.byte	0xf3
 2829 021c 01       		.uleb128 0x1
 2830 021d 50       		.byte	0x50
 2831 021e 9F       		.byte	0x9f
 2832 021f 00000000 		.4byte	0
 2833 0223 00000000 		.4byte	0
 2834              	.LLST14:
 2835 0227 1E000000 		.4byte	.LVL57
 2836 022b 28000000 		.4byte	.LVL59
 2837 022f 0200     		.2byte	0x2
 2838 0231 32       		.byte	0x32
 2839 0232 9F       		.byte	0x9f
 2840 0233 2C000000 		.4byte	.LVL61
 2841 0237 64000000 		.4byte	.LVL67
 2842 023b 0100     		.2byte	0x1
 2843 023d 52       		.byte	0x52
 2844 023e 76000000 		.4byte	.LVL68
 2845 0242 7A000000 		.4byte	.LVL69
 2846 0246 0100     		.2byte	0x1
 2847 0248 52       		.byte	0x52
 2848 0249 00000000 		.4byte	0
 2849 024d 00000000 		.4byte	0
 2850              	.LLST15:
 2851 0251 04000000 		.4byte	.LVL51
 2852 0255 86000000 		.4byte	.LVL70
 2853 0259 0100     		.2byte	0x1
 2854 025b 54       		.byte	0x54
 2855 025c 00000000 		.4byte	0
 2856 0260 00000000 		.4byte	0
 2857              	.LLST16:
 2858 0264 12000000 		.4byte	.LVL53
 2859 0268 22000000 		.4byte	.LVL58
 2860 026c 0100     		.2byte	0x1
 2861 026e 52       		.byte	0x52
 2862 026f 28000000 		.4byte	.LVL59
 2863 0273 2A000000 		.4byte	.LVL60
 2864 0277 0100     		.2byte	0x1
 2865 0279 52       		.byte	0x52
 2866 027a 2A000000 		.4byte	.LVL60
 2867 027e 2C000000 		.4byte	.LVL61
 2868 0282 0300     		.2byte	0x3
 2869 0284 72       		.byte	0x72
 2870 0285 01       		.sleb128 1
 2871 0286 9F       		.byte	0x9f
 2872 0287 00000000 		.4byte	0
 2873 028b 00000000 		.4byte	0
 2874              	.LLST17:
 2875 028f 18000000 		.4byte	.LVL54
 2876 0293 86000000 		.4byte	.LVL70
 2877 0297 0100     		.2byte	0x1
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 76


 2878 0299 57       		.byte	0x57
 2879 029a 00000000 		.4byte	0
 2880 029e 00000000 		.4byte	0
 2881              	.LLST18:
 2882 02a2 1A000000 		.4byte	.LVL55
 2883 02a6 3E000000 		.4byte	.LVL63
 2884 02aa 0100     		.2byte	0x1
 2885 02ac 51       		.byte	0x51
 2886 02ad 50000000 		.4byte	.LVL64
 2887 02b1 5A000000 		.4byte	.LVL66
 2888 02b5 0100     		.2byte	0x1
 2889 02b7 51       		.byte	0x51
 2890 02b8 00000000 		.4byte	0
 2891 02bc 00000000 		.4byte	0
 2892              	.LLST19:
 2893 02c0 1C000000 		.4byte	.LVL56
 2894 02c4 86000000 		.4byte	.LVL70
 2895 02c8 0100     		.2byte	0x1
 2896 02ca 56       		.byte	0x56
 2897 02cb 00000000 		.4byte	0
 2898 02cf 00000000 		.4byte	0
 2899              	.LLST20:
 2900 02d3 00000000 		.4byte	.LVL71
 2901 02d7 08000000 		.4byte	.LVL73
 2902 02db 0100     		.2byte	0x1
 2903 02dd 50       		.byte	0x50
 2904 02de 08000000 		.4byte	.LVL73
 2905 02e2 2C000000 		.4byte	.LFE7
 2906 02e6 0400     		.2byte	0x4
 2907 02e8 F3       		.byte	0xf3
 2908 02e9 01       		.uleb128 0x1
 2909 02ea 50       		.byte	0x50
 2910 02eb 9F       		.byte	0x9f
 2911 02ec 00000000 		.4byte	0
 2912 02f0 00000000 		.4byte	0
 2913              	.LLST21:
 2914 02f4 06000000 		.4byte	.LVL72
 2915 02f8 1C000000 		.4byte	.LVL78
 2916 02fc 0100     		.2byte	0x1
 2917 02fe 54       		.byte	0x54
 2918 02ff 1E000000 		.4byte	.LVL79
 2919 0303 26000000 		.4byte	.LVL80
 2920 0307 0100     		.2byte	0x1
 2921 0309 54       		.byte	0x54
 2922 030a 00000000 		.4byte	0
 2923 030e 00000000 		.4byte	0
 2924              	.LLST22:
 2925 0312 0E000000 		.4byte	.LVL74
 2926 0316 26000000 		.4byte	.LVL80
 2927 031a 0100     		.2byte	0x1
 2928 031c 55       		.byte	0x55
 2929 031d 00000000 		.4byte	0
 2930 0321 00000000 		.4byte	0
 2931              	.LLST23:
 2932 0325 0E000000 		.4byte	.LVL74
 2933 0329 10000000 		.4byte	.LVL75
 2934 032d 0200     		.2byte	0x2
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 77


 2935 032f 30       		.byte	0x30
 2936 0330 9F       		.byte	0x9f
 2937 0331 10000000 		.4byte	.LVL75
 2938 0335 26000000 		.4byte	.LVL80
 2939 0339 0100     		.2byte	0x1
 2940 033b 56       		.byte	0x56
 2941 033c 00000000 		.4byte	0
 2942 0340 00000000 		.4byte	0
 2943              	.LLST24:
 2944 0344 02000000 		.4byte	.LVL81
 2945 0348 08000000 		.4byte	.LVL82
 2946 034c 0200     		.2byte	0x2
 2947 034e 30       		.byte	0x30
 2948 034f 9F       		.byte	0x9f
 2949 0350 08000000 		.4byte	.LVL82
 2950 0354 14000000 		.4byte	.LVL85
 2951 0358 0100     		.2byte	0x1
 2952 035a 54       		.byte	0x54
 2953 035b 16000000 		.4byte	.LVL86
 2954 035f 1E000000 		.4byte	.LFE8
 2955 0363 0100     		.2byte	0x1
 2956 0365 54       		.byte	0x54
 2957 0366 00000000 		.4byte	0
 2958 036a 00000000 		.4byte	0
 2959              	.LLST25:
 2960 036e 02000000 		.4byte	.LVL81
 2961 0372 08000000 		.4byte	.LVL82
 2962 0376 0200     		.2byte	0x2
 2963 0378 30       		.byte	0x30
 2964 0379 9F       		.byte	0x9f
 2965 037a 08000000 		.4byte	.LVL82
 2966 037e 1E000000 		.4byte	.LFE8
 2967 0382 0100     		.2byte	0x1
 2968 0384 55       		.byte	0x55
 2969 0385 00000000 		.4byte	0
 2970 0389 00000000 		.4byte	0
 2971              	.LLST26:
 2972 038d 00000000 		.4byte	.LVL87
 2973 0391 08000000 		.4byte	.LVL89
 2974 0395 0100     		.2byte	0x1
 2975 0397 50       		.byte	0x50
 2976 0398 08000000 		.4byte	.LVL89
 2977 039c 38000000 		.4byte	.LFE9
 2978 03a0 0400     		.2byte	0x4
 2979 03a2 F3       		.byte	0xf3
 2980 03a3 01       		.uleb128 0x1
 2981 03a4 50       		.byte	0x50
 2982 03a5 9F       		.byte	0x9f
 2983 03a6 00000000 		.4byte	0
 2984 03aa 00000000 		.4byte	0
 2985              	.LLST27:
 2986 03ae 1A000000 		.4byte	.LVL92
 2987 03b2 20000000 		.4byte	.LVL93
 2988 03b6 0100     		.2byte	0x1
 2989 03b8 52       		.byte	0x52
 2990 03b9 20000000 		.4byte	.LVL93
 2991 03bd 24000000 		.4byte	.LVL94
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 78


 2992 03c1 0700     		.2byte	0x7
 2993 03c3 31       		.byte	0x31
 2994 03c4 73       		.byte	0x73
 2995 03c5 00       		.sleb128 0
 2996 03c6 37       		.byte	0x37
 2997 03c7 1A       		.byte	0x1a
 2998 03c8 24       		.byte	0x24
 2999 03c9 9F       		.byte	0x9f
 3000 03ca 24000000 		.4byte	.LVL94
 3001 03ce 26000000 		.4byte	.LVL95
 3002 03d2 0700     		.2byte	0x7
 3003 03d4 31       		.byte	0x31
 3004 03d5 73       		.byte	0x73
 3005 03d6 7F       		.sleb128 -1
 3006 03d7 37       		.byte	0x37
 3007 03d8 1A       		.byte	0x1a
 3008 03d9 24       		.byte	0x24
 3009 03da 9F       		.byte	0x9f
 3010 03db 00000000 		.4byte	0
 3011 03df 00000000 		.4byte	0
 3012              	.LLST28:
 3013 03e3 06000000 		.4byte	.LVL88
 3014 03e7 24000000 		.4byte	.LVL94
 3015 03eb 0100     		.2byte	0x1
 3016 03ed 53       		.byte	0x53
 3017 03ee 26000000 		.4byte	.LVL95
 3018 03f2 38000000 		.4byte	.LFE9
 3019 03f6 0100     		.2byte	0x1
 3020 03f8 53       		.byte	0x53
 3021 03f9 00000000 		.4byte	0
 3022 03fd 00000000 		.4byte	0
 3023              	.LLST29:
 3024 0401 0E000000 		.4byte	.LVL90
 3025 0405 2C000000 		.4byte	.LVL96
 3026 0409 0100     		.2byte	0x1
 3027 040b 55       		.byte	0x55
 3028 040c 00000000 		.4byte	0
 3029 0410 00000000 		.4byte	0
 3030              	.LLST30:
 3031 0414 00000000 		.4byte	.LVL97
 3032 0418 08000000 		.4byte	.LVL99
 3033 041c 0100     		.2byte	0x1
 3034 041e 50       		.byte	0x50
 3035 041f 08000000 		.4byte	.LVL99
 3036 0423 38000000 		.4byte	.LFE10
 3037 0427 0400     		.2byte	0x4
 3038 0429 F3       		.byte	0xf3
 3039 042a 01       		.uleb128 0x1
 3040 042b 50       		.byte	0x50
 3041 042c 9F       		.byte	0x9f
 3042 042d 00000000 		.4byte	0
 3043 0431 00000000 		.4byte	0
 3044              	.LLST31:
 3045 0435 1A000000 		.4byte	.LVL102
 3046 0439 22000000 		.4byte	.LVL103
 3047 043d 0100     		.2byte	0x1
 3048 043f 52       		.byte	0x52
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 79


 3049 0440 22000000 		.4byte	.LVL103
 3050 0444 26000000 		.4byte	.LVL104
 3051 0448 0700     		.2byte	0x7
 3052 044a 31       		.byte	0x31
 3053 044b 73       		.byte	0x73
 3054 044c 00       		.sleb128 0
 3055 044d 37       		.byte	0x37
 3056 044e 1A       		.byte	0x1a
 3057 044f 24       		.byte	0x24
 3058 0450 9F       		.byte	0x9f
 3059 0451 26000000 		.4byte	.LVL104
 3060 0455 28000000 		.4byte	.LVL105
 3061 0459 0700     		.2byte	0x7
 3062 045b 31       		.byte	0x31
 3063 045c 73       		.byte	0x73
 3064 045d 7F       		.sleb128 -1
 3065 045e 37       		.byte	0x37
 3066 045f 1A       		.byte	0x1a
 3067 0460 24       		.byte	0x24
 3068 0461 9F       		.byte	0x9f
 3069 0462 00000000 		.4byte	0
 3070 0466 00000000 		.4byte	0
 3071              	.LLST32:
 3072 046a 06000000 		.4byte	.LVL98
 3073 046e 26000000 		.4byte	.LVL104
 3074 0472 0100     		.2byte	0x1
 3075 0474 53       		.byte	0x53
 3076 0475 28000000 		.4byte	.LVL105
 3077 0479 38000000 		.4byte	.LFE10
 3078 047d 0100     		.2byte	0x1
 3079 047f 53       		.byte	0x53
 3080 0480 00000000 		.4byte	0
 3081 0484 00000000 		.4byte	0
 3082              	.LLST33:
 3083 0488 0E000000 		.4byte	.LVL100
 3084 048c 2E000000 		.4byte	.LVL106
 3085 0490 0100     		.2byte	0x1
 3086 0492 55       		.byte	0x55
 3087 0493 00000000 		.4byte	0
 3088 0497 00000000 		.4byte	0
 3089              	.LLST34:
 3090 049b 00000000 		.4byte	.LVL107
 3091 049f 0A000000 		.4byte	.LVL110
 3092 04a3 0100     		.2byte	0x1
 3093 04a5 50       		.byte	0x50
 3094 04a6 0A000000 		.4byte	.LVL110
 3095 04aa 2C000000 		.4byte	.LFE11
 3096 04ae 0400     		.2byte	0x4
 3097 04b0 F3       		.byte	0xf3
 3098 04b1 01       		.uleb128 0x1
 3099 04b2 50       		.byte	0x50
 3100 04b3 9F       		.byte	0x9f
 3101 04b4 00000000 		.4byte	0
 3102 04b8 00000000 		.4byte	0
 3103              	.LLST35:
 3104 04bc 06000000 		.4byte	.LVL109
 3105 04c0 0E000000 		.4byte	.LVL111
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 80


 3106 04c4 0200     		.2byte	0x2
 3107 04c6 30       		.byte	0x30
 3108 04c7 9F       		.byte	0x9f
 3109 04c8 0E000000 		.4byte	.LVL111
 3110 04cc 1E000000 		.4byte	.LVL114
 3111 04d0 0100     		.2byte	0x1
 3112 04d2 53       		.byte	0x53
 3113 04d3 20000000 		.4byte	.LVL115
 3114 04d7 2C000000 		.4byte	.LFE11
 3115 04db 0100     		.2byte	0x1
 3116 04dd 53       		.byte	0x53
 3117 04de 00000000 		.4byte	0
 3118 04e2 00000000 		.4byte	0
 3119              	.LLST36:
 3120 04e6 02000000 		.4byte	.LVL108
 3121 04ea 0E000000 		.4byte	.LVL111
 3122 04ee 0300     		.2byte	0x3
 3123 04f0 09       		.byte	0x9
 3124 04f1 FF       		.byte	0xff
 3125 04f2 9F       		.byte	0x9f
 3126 04f3 0E000000 		.4byte	.LVL111
 3127 04f7 2C000000 		.4byte	.LFE11
 3128 04fb 0100     		.2byte	0x1
 3129 04fd 50       		.byte	0x50
 3130 04fe 00000000 		.4byte	0
 3131 0502 00000000 		.4byte	0
 3132              	.LLST37:
 3133 0506 02000000 		.4byte	.LVL108
 3134 050a 0E000000 		.4byte	.LVL111
 3135 050e 0200     		.2byte	0x2
 3136 0510 30       		.byte	0x30
 3137 0511 9F       		.byte	0x9f
 3138 0512 0E000000 		.4byte	.LVL111
 3139 0516 1A000000 		.4byte	.LVL112
 3140 051a 0100     		.2byte	0x1
 3141 051c 56       		.byte	0x56
 3142 051d 1C000000 		.4byte	.LVL113
 3143 0521 26000000 		.4byte	.LVL116
 3144 0525 0100     		.2byte	0x1
 3145 0527 56       		.byte	0x56
 3146 0528 00000000 		.4byte	0
 3147 052c 00000000 		.4byte	0
 3148              	.LLST38:
 3149 0530 06000000 		.4byte	.LVL109
 3150 0534 26000000 		.4byte	.LVL116
 3151 0538 0100     		.2byte	0x1
 3152 053a 55       		.byte	0x55
 3153 053b 00000000 		.4byte	0
 3154 053f 00000000 		.4byte	0
 3155              	.LLST39:
 3156 0543 00000000 		.4byte	.LVL117
 3157 0547 18000000 		.4byte	.LVL123
 3158 054b 0100     		.2byte	0x1
 3159 054d 50       		.byte	0x50
 3160 054e 18000000 		.4byte	.LVL123
 3161 0552 B0000000 		.4byte	.LFE12
 3162 0556 0400     		.2byte	0x4
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 81


 3163 0558 F3       		.byte	0xf3
 3164 0559 01       		.uleb128 0x1
 3165 055a 50       		.byte	0x50
 3166 055b 9F       		.byte	0x9f
 3167 055c 00000000 		.4byte	0
 3168 0560 00000000 		.4byte	0
 3169              	.LLST40:
 3170 0564 00000000 		.4byte	.LVL117
 3171 0568 0A000000 		.4byte	.LVL119
 3172 056c 0100     		.2byte	0x1
 3173 056e 51       		.byte	0x51
 3174 056f 0A000000 		.4byte	.LVL119
 3175 0573 B0000000 		.4byte	.LFE12
 3176 0577 0400     		.2byte	0x4
 3177 0579 F3       		.byte	0xf3
 3178 057a 01       		.uleb128 0x1
 3179 057b 51       		.byte	0x51
 3180 057c 9F       		.byte	0x9f
 3181 057d 00000000 		.4byte	0
 3182 0581 00000000 		.4byte	0
 3183              	.LLST41:
 3184 0585 00000000 		.4byte	.LVL117
 3185 0589 32000000 		.4byte	.LVL128
 3186 058d 0100     		.2byte	0x1
 3187 058f 52       		.byte	0x52
 3188 0590 32000000 		.4byte	.LVL128
 3189 0594 B0000000 		.4byte	.LFE12
 3190 0598 0400     		.2byte	0x4
 3191 059a F3       		.byte	0xf3
 3192 059b 01       		.uleb128 0x1
 3193 059c 52       		.byte	0x52
 3194 059d 9F       		.byte	0x9f
 3195 059e 00000000 		.4byte	0
 3196 05a2 00000000 		.4byte	0
 3197              	.LLST42:
 3198 05a6 00000000 		.4byte	.LVL117
 3199 05aa A6000000 		.4byte	.LVL142
 3200 05ae 0200     		.2byte	0x2
 3201 05b0 91       		.byte	0x91
 3202 05b1 00       		.sleb128 0
 3203 05b2 A6000000 		.4byte	.LVL142
 3204 05b6 B0000000 		.4byte	.LFE12
 3205 05ba 0200     		.2byte	0x2
 3206 05bc 7D       		.byte	0x7d
 3207 05bd 00       		.sleb128 0
 3208 05be 00000000 		.4byte	0
 3209 05c2 00000000 		.4byte	0
 3210              	.LLST43:
 3211 05c6 06000000 		.4byte	.LVL118
 3212 05ca 12000000 		.4byte	.LVL120
 3213 05ce 0200     		.2byte	0x2
 3214 05d0 30       		.byte	0x30
 3215 05d1 9F       		.byte	0x9f
 3216 05d2 12000000 		.4byte	.LVL120
 3217 05d6 14000000 		.4byte	.LVL121
 3218 05da 0100     		.2byte	0x1
 3219 05dc 56       		.byte	0x56
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 82


 3220 05dd 14000000 		.4byte	.LVL121
 3221 05e1 16000000 		.4byte	.LVL122
 3222 05e5 0200     		.2byte	0x2
 3223 05e7 30       		.byte	0x30
 3224 05e8 9F       		.byte	0x9f
 3225 05e9 16000000 		.4byte	.LVL122
 3226 05ed 28000000 		.4byte	.LVL125
 3227 05f1 0100     		.2byte	0x1
 3228 05f3 56       		.byte	0x56
 3229 05f4 30000000 		.4byte	.LVL127
 3230 05f8 44000000 		.4byte	.LVL131
 3231 05fc 0100     		.2byte	0x1
 3232 05fe 56       		.byte	0x56
 3233 05ff 00000000 		.4byte	0
 3234 0603 00000000 		.4byte	0
 3235              	.LLST44:
 3236 0607 06000000 		.4byte	.LVL118
 3237 060b 1A000000 		.4byte	.LVL124
 3238 060f 0200     		.2byte	0x2
 3239 0611 30       		.byte	0x30
 3240 0612 9F       		.byte	0x9f
 3241 0613 1A000000 		.4byte	.LVL124
 3242 0617 7C000000 		.4byte	.LVL133
 3243 061b 0100     		.2byte	0x1
 3244 061d 50       		.byte	0x50
 3245 061e 7C000000 		.4byte	.LVL133
 3246 0622 A6000000 		.4byte	.LVL142
 3247 0626 0300     		.2byte	0x3
 3248 0628 74       		.byte	0x74
 3249 0629 01       		.sleb128 1
 3250 062a 9F       		.byte	0x9f
 3251 062b 00000000 		.4byte	0
 3252 062f 00000000 		.4byte	0
 3253              	.LLST45:
 3254 0633 A0000000 		.4byte	.LVL140
 3255 0637 A4000000 		.4byte	.LVL141
 3256 063b 0900     		.2byte	0x9
 3257 063d 70       		.byte	0x70
 3258 063e 00       		.sleb128 0
 3259 063f 09       		.byte	0x9
 3260 0640 EC       		.byte	0xec
 3261 0641 24       		.byte	0x24
 3262 0642 09       		.byte	0x9
 3263 0643 FC       		.byte	0xfc
 3264 0644 25       		.byte	0x25
 3265 0645 9F       		.byte	0x9f
 3266 0646 A4000000 		.4byte	.LVL141
 3267 064a A6000000 		.4byte	.LVL142
 3268 064e 2300     		.2byte	0x23
 3269 0650 74       		.byte	0x74
 3270 0651 00       		.sleb128 0
 3271 0652 38       		.byte	0x38
 3272 0653 24       		.byte	0x24
 3273 0654 72       		.byte	0x72
 3274 0655 00       		.sleb128 0
 3275 0656 03       		.byte	0x3
 3276 0657 06000000 		.4byte	CapSense_centroid.5253+2
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 83


 3277 065b 94       		.byte	0x94
 3278 065c 01       		.byte	0x1
 3279 065d 08       		.byte	0x8
 3280 065e FF       		.byte	0xff
 3281 065f 1A       		.byte	0x1a
 3282 0660 71       		.byte	0x71
 3283 0661 00       		.sleb128 0
 3284 0662 22       		.byte	0x22
 3285 0663 1B       		.byte	0x1b
 3286 0664 22       		.byte	0x22
 3287 0665 73       		.byte	0x73
 3288 0666 00       		.sleb128 0
 3289 0667 1E       		.byte	0x1e
 3290 0668 23       		.byte	0x23
 3291 0669 80FE01   		.uleb128 0x7f00
 3292 066c 09       		.byte	0x9
 3293 066d EC       		.byte	0xec
 3294 066e 24       		.byte	0x24
 3295 066f 09       		.byte	0x9
 3296 0670 FC       		.byte	0xfc
 3297 0671 25       		.byte	0x25
 3298 0672 9F       		.byte	0x9f
 3299 0673 00000000 		.4byte	0
 3300 0677 00000000 		.4byte	0
 3301              	.LLST46:
 3302 067b 88000000 		.4byte	.LVL134
 3303 067f 8E000000 		.4byte	.LVL136
 3304 0683 0100     		.2byte	0x1
 3305 0685 52       		.byte	0x52
 3306 0686 8E000000 		.4byte	.LVL136
 3307 068a A6000000 		.4byte	.LVL142
 3308 068e 0E00     		.2byte	0xe
 3309 0690 03       		.byte	0x3
 3310 0691 06000000 		.4byte	CapSense_centroid.5253+2
 3311 0695 94       		.byte	0x94
 3312 0696 01       		.byte	0x1
 3313 0697 08       		.byte	0x8
 3314 0698 FF       		.byte	0xff
 3315 0699 1A       		.byte	0x1a
 3316 069a 75       		.byte	0x75
 3317 069b 00       		.sleb128 0
 3318 069c 1C       		.byte	0x1c
 3319 069d 9F       		.byte	0x9f
 3320 069e A6000000 		.4byte	.LVL142
 3321 06a2 B0000000 		.4byte	.LFE12
 3322 06a6 1600     		.2byte	0x16
 3323 06a8 03       		.byte	0x3
 3324 06a9 06000000 		.4byte	CapSense_centroid.5253+2
 3325 06ad 94       		.byte	0x94
 3326 06ae 01       		.byte	0x1
 3327 06af 08       		.byte	0x8
 3328 06b0 FF       		.byte	0xff
 3329 06b1 1A       		.byte	0x1a
 3330 06b2 03       		.byte	0x3
 3331 06b3 04000000 		.4byte	CapSense_centroid.5253
 3332 06b7 94       		.byte	0x94
 3333 06b8 01       		.byte	0x1
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 84


 3334 06b9 08       		.byte	0x8
 3335 06ba FF       		.byte	0xff
 3336 06bb 1A       		.byte	0x1a
 3337 06bc 1C       		.byte	0x1c
 3338 06bd 9F       		.byte	0x9f
 3339 06be 00000000 		.4byte	0
 3340 06c2 00000000 		.4byte	0
 3341              	.LLST47:
 3342 06c6 8C000000 		.4byte	.LVL135
 3343 06ca 92000000 		.4byte	.LVL137
 3344 06ce 0100     		.2byte	0x1
 3345 06d0 50       		.byte	0x50
 3346 06d1 92000000 		.4byte	.LVL137
 3347 06d5 96000000 		.4byte	.LVL138
 3348 06d9 0E00     		.2byte	0xe
 3349 06db 03       		.byte	0x3
 3350 06dc 06000000 		.4byte	CapSense_centroid.5253+2
 3351 06e0 94       		.byte	0x94
 3352 06e1 01       		.byte	0x1
 3353 06e2 08       		.byte	0x8
 3354 06e3 FF       		.byte	0xff
 3355 06e4 1A       		.byte	0x1a
 3356 06e5 71       		.byte	0x71
 3357 06e6 00       		.sleb128 0
 3358 06e7 22       		.byte	0x22
 3359 06e8 9F       		.byte	0x9f
 3360 06e9 96000000 		.4byte	.LVL138
 3361 06ed A0000000 		.4byte	.LVL140
 3362 06f1 0100     		.2byte	0x1
 3363 06f3 50       		.byte	0x50
 3364 06f4 A0000000 		.4byte	.LVL140
 3365 06f8 A4000000 		.4byte	.LVL141
 3366 06fc 0500     		.2byte	0x5
 3367 06fe 70       		.byte	0x70
 3368 06ff 80827E   		.sleb128 -32512
 3369 0702 9F       		.byte	0x9f
 3370 0703 A4000000 		.4byte	.LVL141
 3371 0707 A6000000 		.4byte	.LVL142
 3372 070b 1900     		.2byte	0x19
 3373 070d 74       		.byte	0x74
 3374 070e 00       		.sleb128 0
 3375 070f 38       		.byte	0x38
 3376 0710 24       		.byte	0x24
 3377 0711 72       		.byte	0x72
 3378 0712 00       		.sleb128 0
 3379 0713 03       		.byte	0x3
 3380 0714 06000000 		.4byte	CapSense_centroid.5253+2
 3381 0718 94       		.byte	0x94
 3382 0719 01       		.byte	0x1
 3383 071a 08       		.byte	0x8
 3384 071b FF       		.byte	0xff
 3385 071c 1A       		.byte	0x1a
 3386 071d 71       		.byte	0x71
 3387 071e 00       		.sleb128 0
 3388 071f 22       		.byte	0x22
 3389 0720 1B       		.byte	0x1b
 3390 0721 22       		.byte	0x22
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 85


 3391 0722 73       		.byte	0x73
 3392 0723 00       		.sleb128 0
 3393 0724 1E       		.byte	0x1e
 3394 0725 9F       		.byte	0x9f
 3395 0726 00000000 		.4byte	0
 3396 072a 00000000 		.4byte	0
 3397              	.LLST48:
 3398 072e 0A000000 		.4byte	.LVL119
 3399 0732 2C000000 		.4byte	.LVL126
 3400 0736 0100     		.2byte	0x1
 3401 0738 51       		.byte	0x51
 3402 0739 30000000 		.4byte	.LVL127
 3403 073d 38000000 		.4byte	.LVL129
 3404 0741 0100     		.2byte	0x1
 3405 0743 51       		.byte	0x51
 3406 0744 42000000 		.4byte	.LVL130
 3407 0748 4A000000 		.4byte	.LVL132
 3408 074c 0100     		.2byte	0x1
 3409 074e 51       		.byte	0x51
 3410 074f 00000000 		.4byte	0
 3411 0753 00000000 		.4byte	0
 3412              	.LLST49:
 3413 0757 00000000 		.4byte	.LVL143
 3414 075b 18000000 		.4byte	.LVL146
 3415 075f 0100     		.2byte	0x1
 3416 0761 50       		.byte	0x50
 3417 0762 18000000 		.4byte	.LVL146
 3418 0766 48000000 		.4byte	.LFE13
 3419 076a 0400     		.2byte	0x4
 3420 076c F3       		.byte	0xf3
 3421 076d 01       		.uleb128 0x1
 3422 076e 50       		.byte	0x50
 3423 076f 9F       		.byte	0x9f
 3424 0770 00000000 		.4byte	0
 3425 0774 00000000 		.4byte	0
 3426              	.LLST50:
 3427 0778 1C000000 		.4byte	.LVL147
 3428 077c 33000000 		.4byte	.LVL148-1
 3429 0780 0100     		.2byte	0x1
 3430 0782 50       		.byte	0x50
 3431 0783 38000000 		.4byte	.LVL150
 3432 0787 3C000000 		.4byte	.LVL151
 3433 078b 0100     		.2byte	0x1
 3434 078d 50       		.byte	0x50
 3435 078e 00000000 		.4byte	0
 3436 0792 00000000 		.4byte	0
 3437              	.LLST51:
 3438 0796 36000000 		.4byte	.LVL149
 3439 079a 38000000 		.4byte	.LVL150
 3440 079e 0100     		.2byte	0x1
 3441 07a0 50       		.byte	0x50
 3442 07a1 3C000000 		.4byte	.LVL151
 3443 07a5 48000000 		.4byte	.LFE13
 3444 07a9 0100     		.2byte	0x1
 3445 07ab 50       		.byte	0x50
 3446 07ac 00000000 		.4byte	0
 3447 07b0 00000000 		.4byte	0
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 86


 3448              	.LLST52:
 3449 07b4 0A000000 		.4byte	.LVL144
 3450 07b8 40000000 		.4byte	.LVL152
 3451 07bc 0100     		.2byte	0x1
 3452 07be 55       		.byte	0x55
 3453 07bf 00000000 		.4byte	0
 3454 07c3 00000000 		.4byte	0
 3455              	.LLST53:
 3456 07c7 0E000000 		.4byte	.LVL145
 3457 07cb 40000000 		.4byte	.LVL152
 3458 07cf 0100     		.2byte	0x1
 3459 07d1 56       		.byte	0x56
 3460 07d2 00000000 		.4byte	0
 3461 07d6 00000000 		.4byte	0
 3462              		.section	.debug_aranges,"",%progbits
 3463 0000 84000000 		.4byte	0x84
 3464 0004 0200     		.2byte	0x2
 3465 0006 00000000 		.4byte	.Ldebug_info0
 3466 000a 04       		.byte	0x4
 3467 000b 00       		.byte	0
 3468 000c 0000     		.2byte	0
 3469 000e 0000     		.2byte	0
 3470 0010 00000000 		.4byte	.LFB0
 3471 0014 44000000 		.4byte	.LFE0-.LFB0
 3472 0018 00000000 		.4byte	.LFB1
 3473 001c 18000000 		.4byte	.LFE1-.LFB1
 3474 0020 00000000 		.4byte	.LFB2
 3475 0024 16000000 		.4byte	.LFE2-.LFB2
 3476 0028 00000000 		.4byte	.LFB3
 3477 002c 44000000 		.4byte	.LFE3-.LFB3
 3478 0030 00000000 		.4byte	.LFB4
 3479 0034 C8000000 		.4byte	.LFE4-.LFB4
 3480 0038 00000000 		.4byte	.LFB5
 3481 003c 2C000000 		.4byte	.LFE5-.LFB5
 3482 0040 00000000 		.4byte	.LFB6
 3483 0044 9C000000 		.4byte	.LFE6-.LFB6
 3484 0048 00000000 		.4byte	.LFB7
 3485 004c 2C000000 		.4byte	.LFE7-.LFB7
 3486 0050 00000000 		.4byte	.LFB8
 3487 0054 1E000000 		.4byte	.LFE8-.LFB8
 3488 0058 00000000 		.4byte	.LFB9
 3489 005c 38000000 		.4byte	.LFE9-.LFB9
 3490 0060 00000000 		.4byte	.LFB10
 3491 0064 38000000 		.4byte	.LFE10-.LFB10
 3492 0068 00000000 		.4byte	.LFB11
 3493 006c 2C000000 		.4byte	.LFE11-.LFB11
 3494 0070 00000000 		.4byte	.LFB12
 3495 0074 B0000000 		.4byte	.LFE12-.LFB12
 3496 0078 00000000 		.4byte	.LFB13
 3497 007c 48000000 		.4byte	.LFE13-.LFB13
 3498 0080 00000000 		.4byte	0
 3499 0084 00000000 		.4byte	0
 3500              		.section	.debug_ranges,"",%progbits
 3501              	.Ldebug_ranges0:
 3502 0000 00000000 		.4byte	.LFB0
 3503 0004 44000000 		.4byte	.LFE0
 3504 0008 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 87


 3505 000c 18000000 		.4byte	.LFE1
 3506 0010 00000000 		.4byte	.LFB2
 3507 0014 16000000 		.4byte	.LFE2
 3508 0018 00000000 		.4byte	.LFB3
 3509 001c 44000000 		.4byte	.LFE3
 3510 0020 00000000 		.4byte	.LFB4
 3511 0024 C8000000 		.4byte	.LFE4
 3512 0028 00000000 		.4byte	.LFB5
 3513 002c 2C000000 		.4byte	.LFE5
 3514 0030 00000000 		.4byte	.LFB6
 3515 0034 9C000000 		.4byte	.LFE6
 3516 0038 00000000 		.4byte	.LFB7
 3517 003c 2C000000 		.4byte	.LFE7
 3518 0040 00000000 		.4byte	.LFB8
 3519 0044 1E000000 		.4byte	.LFE8
 3520 0048 00000000 		.4byte	.LFB9
 3521 004c 38000000 		.4byte	.LFE9
 3522 0050 00000000 		.4byte	.LFB10
 3523 0054 38000000 		.4byte	.LFE10
 3524 0058 00000000 		.4byte	.LFB11
 3525 005c 2C000000 		.4byte	.LFE11
 3526 0060 00000000 		.4byte	.LFB12
 3527 0064 B0000000 		.4byte	.LFE12
 3528 0068 00000000 		.4byte	.LFB13
 3529 006c 48000000 		.4byte	.LFE13
 3530 0070 00000000 		.4byte	0
 3531 0074 00000000 		.4byte	0
 3532              		.section	.debug_line,"",%progbits
 3533              	.Ldebug_line0:
 3534 0000 A2020000 		.section	.debug_str,"MS",%progbits,1
 3534      02006B00 
 3534      00000201 
 3534      FB0E0D00 
 3534      01010101 
 3535              	.LASF47:
 3536 0000 636F756E 		.ascii	"count\000"
 3536      7400
 3537              	.LASF10:
 3538 0006 75696E74 		.ascii	"uint16\000"
 3538      313600
 3539              	.LASF29:
 3540 000d 66696C74 		.ascii	"filteredRawData\000"
 3540      65726564 
 3540      52617744 
 3540      61746100 
 3541              	.LASF70:
 3542 001d 43617053 		.ascii	"CapSense_hysteresis\000"
 3542      656E7365 
 3542      5F687973 
 3542      74657265 
 3542      73697300 
 3543              	.LASF66:
 3544 0031 43617053 		.ascii	"CapSense_sensorOnMask\000"
 3544      656E7365 
 3544      5F73656E 
 3544      736F724F 
 3544      6E4D6173 
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 88


 3545              	.LASF34:
 3546 0047 66696E67 		.ascii	"fingerThreshold\000"
 3546      65725468 
 3546      72657368 
 3546      6F6C6400 
 3547              	.LASF53:
 3548 0057 706F7350 		.ascii	"posPrev\000"
 3548      72657600 
 3549              	.LASF7:
 3550 005f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3550      206C6F6E 
 3550      6720756E 
 3550      7369676E 
 3550      65642069 
 3551              	.LASF65:
 3552 0076 43617053 		.ascii	"CapSense_sensorSignal\000"
 3552      656E7365 
 3552      5F73656E 
 3552      736F7253 
 3552      69676E61 
 3553              	.LASF24:
 3554 008c 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3554      656E7365 
 3554      5F496E69 
 3554      7469616C 
 3554      697A6545 
 3555              	.LASF31:
 3556 00b0 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3556      656E7365 
 3556      5F557064 
 3556      61746545 
 3556      6E61626C 
 3557              	.LASF6:
 3558 00d0 6C6F6E67 		.ascii	"long long int\000"
 3558      206C6F6E 
 3558      6720696E 
 3558      7400
 3559              	.LASF0:
 3560 00de 7369676E 		.ascii	"signed char\000"
 3560      65642063 
 3560      68617200 
 3561              	.LASF44:
 3562 00ea 43617053 		.ascii	"CapSense_DisableWidget\000"
 3562      656E7365 
 3562      5F446973 
 3562      61626C65 
 3562      57696467 
 3563              	.LASF39:
 3564 0101 72617749 		.ascii	"rawIndex\000"
 3564      6E646578 
 3564      00
 3565              	.LASF40:
 3566 010a 6E756D62 		.ascii	"numberOfSensors\000"
 3566      65724F66 
 3566      53656E73 
 3566      6F727300 
 3567              	.LASF13:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 89


 3568 011a 696E7433 		.ascii	"int32\000"
 3568      3200
 3569              	.LASF41:
 3570 0120 73746174 		.ascii	"state\000"
 3570      6500
 3571              	.LASF4:
 3572 0126 6C6F6E67 		.ascii	"long int\000"
 3572      20696E74 
 3572      00
 3573              	.LASF57:
 3574 012f 6E756D65 		.ascii	"numerator\000"
 3574      7261746F 
 3574      7200
 3575              	.LASF42:
 3576 0139 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3576      656E7365 
 3576      5F436865 
 3576      636B4973 
 3576      416E7957 
 3577              	.LASF58:
 3578 0159 64656E6F 		.ascii	"denominator\000"
 3578      6D696E61 
 3578      746F7200 
 3579              	.LASF82:
 3580 0165 443A5C55 		.ascii	"D:\\Users\\ESTEBAN\\Desktop\\Sensor_Capacitivo_Comu"
 3580      73657273 
 3580      5C455354 
 3580      4542414E 
 3580      5C446573 
 3581 0194 6E696361 		.ascii	"nicacion_USB\\Sensor_Capacitivo.cydsn\000"
 3581      63696F6E 
 3581      5F555342 
 3581      5C53656E 
 3581      736F725F 
 3582              	.LASF9:
 3583 01b9 75696E74 		.ascii	"uint8\000"
 3583      3800
 3584              	.LASF15:
 3585 01bf 646F7562 		.ascii	"double\000"
 3585      6C6500
 3586              	.LASF62:
 3587 01c6 43617053 		.ascii	"CapSense_widgetNumber\000"
 3587      656E7365 
 3587      5F776964 
 3587      6765744E 
 3587      756D6265 
 3588              	.LASF11:
 3589 01dc 75696E74 		.ascii	"uint32\000"
 3589      333200
 3590              	.LASF35:
 3591 01e3 68797374 		.ascii	"hysteresis\000"
 3591      65726573 
 3591      697300
 3592              	.LASF48:
 3593 01ee 6D617869 		.ascii	"maximum\000"
 3593      6D756D00 
 3594              	.LASF54:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 90


 3595 01f6 706F734E 		.ascii	"posNext\000"
 3595      65787400 
 3596              	.LASF50:
 3597 01fe 73746172 		.ascii	"startOfSlider\000"
 3597      744F6653 
 3597      6C696465 
 3597      7200
 3598              	.LASF49:
 3599 020c 74656D70 		.ascii	"temp\000"
 3599      00
 3600              	.LASF76:
 3601 0211 43617053 		.ascii	"CapSense_ScanSensor\000"
 3601      656E7365 
 3601      5F536361 
 3601      6E53656E 
 3601      736F7200 
 3602              	.LASF8:
 3603 0225 756E7369 		.ascii	"unsigned int\000"
 3603      676E6564 
 3603      20696E74 
 3603      00
 3604              	.LASF56:
 3605 0232 706F7369 		.ascii	"position\000"
 3605      74696F6E 
 3605      00
 3606              	.LASF5:
 3607 023b 6C6F6E67 		.ascii	"long unsigned int\000"
 3607      20756E73 
 3607      69676E65 
 3607      6420696E 
 3607      7400
 3608              	.LASF64:
 3609 024d 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 3609      656E7365 
 3609      5F73656E 
 3609      736F7242 
 3609      6173656C 
 3610              	.LASF73:
 3611 0268 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3611      656E7365 
 3611      5F726177 
 3611      44617461 
 3611      496E6465 
 3612              	.LASF3:
 3613 027e 73686F72 		.ascii	"short unsigned int\000"
 3613      7420756E 
 3613      7369676E 
 3613      65642069 
 3613      6E7400
 3614              	.LASF21:
 3615 0291 73656E73 		.ascii	"sensor\000"
 3615      6F7200
 3616              	.LASF61:
 3617 0298 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 3617      656E7365 
 3617      5F73656E 
 3617      736F7245 
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 91


 3617      6E61626C 
 3618              	.LASF45:
 3619 02b2 43617053 		.ascii	"CapSense_FindMaximum\000"
 3619      656E7365 
 3619      5F46696E 
 3619      644D6178 
 3619      696D756D 
 3620              	.LASF26:
 3621 02c7 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3621      656E7365 
 3621      5F557064 
 3621      61746553 
 3621      656E736F 
 3622              	.LASF27:
 3623 02e5 63616C63 		.ascii	"calc\000"
 3623      00
 3624              	.LASF79:
 3625 02ea 43617053 		.ascii	"CapSense_CalculateThresholds\000"
 3625      656E7365 
 3625      5F43616C 
 3625      63756C61 
 3625      74655468 
 3626              	.LASF67:
 3627 0307 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 3627      656E7365 
 3627      5F6C6F77 
 3627      42617365 
 3627      6C696E65 
 3628              	.LASF36:
 3629 0324 6465626F 		.ascii	"debounce\000"
 3629      756E6365 
 3629      00
 3630              	.LASF18:
 3631 032d 73697A65 		.ascii	"sizetype\000"
 3631      74797065 
 3631      00
 3632              	.LASF43:
 3633 0336 43617053 		.ascii	"CapSense_EnableWidget\000"
 3633      656E7365 
 3633      5F456E61 
 3633      626C6557 
 3633      69646765 
 3634              	.LASF17:
 3635 034c 6C6F6E67 		.ascii	"long double\000"
 3635      20646F75 
 3635      626C6500 
 3636              	.LASF20:
 3637 0358 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3637      656E7365 
 3637      5F496E69 
 3637      7469616C 
 3637      697A6553 
 3638              	.LASF37:
 3639 037a 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3639      656E7365 
 3639      5F436865 
 3639      636B4973 
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 92


 3639      53656E73 
 3640              	.LASF25:
 3641 0397 656E4D61 		.ascii	"enMask\000"
 3641      736B00
 3642              	.LASF69:
 3643 039e 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3643      656E7365 
 3643      5F6E6F69 
 3643      73655468 
 3643      72657368 
 3644              	.LASF68:
 3645 03b6 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3645      656E7365 
 3645      5F66696E 
 3645      67657254 
 3645      68726573 
 3646              	.LASF75:
 3647 03cf 43617053 		.ascii	"CapSense_centroidMult\000"
 3647      656E7365 
 3647      5F63656E 
 3647      74726F69 
 3647      644D756C 
 3648              	.LASF14:
 3649 03e5 666C6F61 		.ascii	"float\000"
 3649      7400
 3650              	.LASF38:
 3651 03eb 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3651      656E7365 
 3651      5F436865 
 3651      636B4973 
 3651      57696467 
 3652              	.LASF1:
 3653 0408 756E7369 		.ascii	"unsigned char\000"
 3653      676E6564 
 3653      20636861 
 3653      7200
 3654              	.LASF22:
 3655 0416 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3655      656E7365 
 3655      5F496E69 
 3655      7469616C 
 3655      697A6541 
 3656              	.LASF30:
 3657 0436 6E6F6973 		.ascii	"noiseThreshold\000"
 3657      65546872 
 3657      6573686F 
 3657      6C6400
 3658              	.LASF2:
 3659 0445 73686F72 		.ascii	"short int\000"
 3659      7420696E 
 3659      7400
 3660              	.LASF23:
 3661 044f 77696467 		.ascii	"widget\000"
 3661      657400
 3662              	.LASF33:
 3663 0456 6F6E4D61 		.ascii	"onMask\000"
 3663      736B00
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 93


 3664              	.LASF80:
 3665 045d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3665      43313120 
 3665      352E342E 
 3665      31203230 
 3665      31363036 
 3666 0490 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3666      20726576 
 3666      6973696F 
 3666      6E203233 
 3666      37373135 
 3667 04c3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3667      66756E63 
 3667      74696F6E 
 3667      2D736563 
 3667      74696F6E 
 3668              	.LASF19:
 3669 04eb 43617053 		.ascii	"CapSense_BaseInit\000"
 3669      656E7365 
 3669      5F426173 
 3669      65496E69 
 3669      7400
 3670              	.LASF52:
 3671 04fd 7265736F 		.ascii	"resolution\000"
 3671      6C757469 
 3671      6F6E00
 3672              	.LASF71:
 3673 0508 43617053 		.ascii	"CapSense_debounce\000"
 3673      656E7365 
 3673      5F646562 
 3673      6F756E63 
 3673      6500
 3674              	.LASF63:
 3675 051a 43617053 		.ascii	"CapSense_sensorBaseline\000"
 3675      656E7365 
 3675      5F73656E 
 3675      736F7242 
 3675      6173656C 
 3676              	.LASF59:
 3677 0532 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3677      656E7365 
 3677      5F476574 
 3677      43656E74 
 3677      726F6964 
 3678              	.LASF16:
 3679 054a 63686172 		.ascii	"char\000"
 3679      00
 3680              	.LASF55:
 3681 054f 43617053 		.ascii	"CapSense_centroid\000"
 3681      656E7365 
 3681      5F63656E 
 3681      74726F69 
 3681      6400
 3682              	.LASF46:
 3683 0561 6F666673 		.ascii	"offset\000"
 3683      657400
 3684              	.LASF32:
ARM GAS  C:\Users\ESTEBAN\AppData\Local\Temp\ccTkMZau.s 			page 94


 3685 0568 6465626F 		.ascii	"debounceIndex\000"
 3685      756E6365 
 3685      496E6465 
 3685      7800
 3686              	.LASF81:
 3687 0576 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 3687      72617465 
 3687      645F536F 
 3687      75726365 
 3687      5C50536F 
 3688              	.LASF12:
 3689 059d 696E7431 		.ascii	"int16\000"
 3689      3600
 3690              	.LASF60:
 3691 05a3 43617053 		.ascii	"CapSense_sensorRaw\000"
 3691      656E7365 
 3691      5F73656E 
 3691      736F7252 
 3691      617700
 3692              	.LASF51:
 3693 05b6 43617053 		.ascii	"CapSense_CalcCentroid\000"
 3693      656E7365 
 3693      5F43616C 
 3693      6343656E 
 3693      74726F69 
 3694              	.LASF78:
 3695 05cc 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 3695      656E7365 
 3695      5F536361 
 3695      6E456E61 
 3695      626C6564 
 3696              	.LASF72:
 3697 05e8 43617053 		.ascii	"CapSense_debounceCounter\000"
 3697      656E7365 
 3697      5F646562 
 3697      6F756E63 
 3697      65436F75 
 3698              	.LASF28:
 3699 0601 74656D70 		.ascii	"tempRaw\000"
 3699      52617700 
 3700              	.LASF77:
 3701 0609 43617053 		.ascii	"CapSense_IsBusy\000"
 3701      656E7365 
 3701      5F497342 
 3701      75737900 
 3702              	.LASF74:
 3703 0619 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3703      656E7365 
 3703      5F6E756D 
 3703      6265724F 
 3703      6653656E 
 3704              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
