CCS PCM C Compiler, Version 5.015, 5967               06-ene.-20 18:26

               Filename:   D:\Users\ESTEBAN\Desktop\Materias\Codigos\CCS\codigos profesor\Servos\Servom.lst

               ROM used:   143 words (2%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           14 (4%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   06A
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
0022:  MOVLW  10
0023:  MOVWF  28
0024:  CLRF   77
0025:  CLRF   7A
0026:  RRF    25,F
0027:  RRF    24,F
0028:  BTFSS  03.0
0029:  GOTO   030
002A:  MOVF   26,W
002B:  ADDWF  77,F
002C:  BTFSC  03.0
002D:  INCF   7A,F
002E:  MOVF   27,W
002F:  ADDWF  7A,F
0030:  RRF    7A,F
0031:  RRF    77,F
0032:  RRF    79,F
0033:  RRF    78,F
0034:  DECFSZ 28,F
0035:  GOTO   026
....................  
.................... #list 
....................  
.................... #device adc=8 
.................... #FUSES HS,NOWDT,NOPROTECT,NOLVP 
.................... #define SERVOUT PIN_B0 
.................... #use delay(clock=20M) 
*
0004:  MOVLW  03
0005:  SUBWF  25,F
0006:  BTFSS  03.0
0007:  GOTO   012
0008:  MOVLW  25
0009:  MOVWF  04
000A:  BCF    03.7
000B:  MOVF   00,W
000C:  BTFSC  03.2
000D:  GOTO   012
000E:  GOTO   010
000F:  GOTO   010
0010:  DECFSZ 00,F
0011:  GOTO   00F
0012:  RETURN
*
0052:  MOVLW  24
0053:  MOVWF  04
0054:  BCF    03.7
0055:  MOVF   00,W
0056:  BTFSC  03.2
0057:  GOTO   065
0058:  MOVLW  06
0059:  MOVWF  78
005A:  CLRF   77
005B:  DECFSZ 77,F
005C:  GOTO   05B
005D:  DECFSZ 78,F
005E:  GOTO   05A
005F:  MOVLW  7B
0060:  MOVWF  77
0061:  DECFSZ 77,F
0062:  GOTO   061
0063:  DECFSZ 00,F
0064:  GOTO   058
....................  
.................... int8 valor; 
.................... int16 pulse; 
....................  
.................... void servo(); 
....................  
.................... void main(void){ 
*
006A:  MOVF   03,W
006B:  ANDLW  1F
006C:  MOVWF  03
006D:  BSF    03.5
006E:  BSF    1F.0
006F:  BSF    1F.1
0070:  BSF    1F.2
0071:  BCF    1F.3
0072:  MOVLW  07
0073:  MOVWF  1C
0074:  BCF    03.7
.................... setup_adc_ports(ra0_analog); 
0075:  BCF    1F.0
0076:  BSF    1F.1
0077:  BSF    1F.2
0078:  BSF    1F.3
.................... setup_adc(adc_clock_internal); 
0079:  BCF    1F.6
007A:  BCF    03.5
007B:  BSF    1F.6
007C:  BSF    1F.7
007D:  BSF    03.5
007E:  BCF    1F.7
007F:  BCF    03.5
0080:  BSF    1F.0
.................... set_adc_channel(0); 
0081:  MOVLW  00
0082:  MOVWF  78
0083:  MOVF   1F,W
0084:  ANDLW  C7
0085:  IORWF  78,W
0086:  MOVWF  1F
.................... while (1){ 
.................... valor=read_adc(); 
0087:  BSF    1F.2
0088:  BTFSC  1F.2
0089:  GOTO   088
008A:  MOVF   1E,W
008B:  MOVWF  20
.................... servo();} 
008C:  GOTO   013
008D:  GOTO   087
.................... } 
....................  
008E:  SLEEP
....................  
.................... void servo(){ 
.................... int i; 
.................... for (i = 0; i < 50; i++){ 
*
0013:  CLRF   23
0014:  MOVF   23,W
0015:  SUBLW  31
0016:  BTFSS  03.0
0017:  GOTO   067
.................... output_high (SERVOUT); 
0018:  BSF    03.5
0019:  BCF    06.0
001A:  BCF    03.5
001B:  BSF    06.0
.................... pulse=(int16) 6*valor+500; 
001C:  CLRF   25
001D:  MOVLW  06
001E:  MOVWF  24
001F:  CLRF   27
0020:  MOVF   20,W
0021:  MOVWF  26
*
0036:  MOVLW  F4
0037:  ADDWF  78,W
0038:  MOVWF  21
0039:  MOVF   79,W
003A:  MOVWF  22
003B:  MOVLW  01
003C:  BTFSC  03.0
003D:  MOVLW  02
003E:  ADDWF  22,F
.................... delay_us(pulse); 
003F:  MOVF   22,W
0040:  MOVWF  24
0041:  INCF   24,F
0042:  DECF   24,F
0043:  BTFSC  03.2
0044:  GOTO   049
0045:  MOVLW  FF
0046:  MOVWF  25
0047:  CALL   004
0048:  GOTO   042
0049:  MOVF   21,W
004A:  MOVWF  25
004B:  CALL   004
.................... output_low (SERVOUT); 
004C:  BSF    03.5
004D:  BCF    06.0
004E:  BCF    03.5
004F:  BCF    06.0
.................... delay_ms(18); 
0050:  MOVLW  12
0051:  MOVWF  24
*
0065:  INCF   23,F
0066:  GOTO   014
.................... } 
0067:  BCF    0A.3
0068:  BCF    0A.4
0069:  GOTO   08D (RETURN)
.................... } 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
